from addons.string_utils import StringUtils
from distutils.util import strtobool
from selenium.webdriver.common.by import By
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
from subtests import test_login
from subtests import test_logout
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Bloomy_Core
    Package: TestProject.Generated.Tests.BloomyCore
    Test: SalesOrderToProductionPlan_TestCase
    Generated by: Meenal Kardale (meenal.kardale@extrapreneurs-india.com)
    Generated on 06/30/2021, 10:51:24
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="3J0RNM_48lLt_KM5Ab6s6A_HZzddmktVs_HhX77AjTM",
                              project_name="Bloomy_Core",
                              job_name="SalesOrderToProductionPlan_TestCase")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    """1. Go to the Sales Order Doctype.(Desk >> Selling >> Sales Order) or Type sales Order on search bar.

    2.Open Sales Order3. Click on Create -> Production Plan4. Click on save and Submit.
    """
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "https://epitest-demo.bloomstack.io/"
    ExpectedCustNm = ""
    ExpectedCompany = ""
    ExpectedDeliveryDate = ""
    ActualCustNm = ""
    username = ""
    pwd = ""
    ActualCompany = ""
    ActualSalesOrdernumber = ""
    ActualCompany1 = ""
    ExpectedSaleOrderno = ""

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Login to the Application
    test_login.test_main(driver)

    # 3. Click 'Search or type a command (Ctrl + G)'
    search_or_type_a_command_ctrl_g_ = driver.find_element(By.CSS_SELECTOR,
                                                           "#navbar-search")
    search_or_type_a_command_ctrl_g_.click()

    # 4. Type 'sales order ' in 'Search or type a command (Ctrl + G)'
    search_or_type_a_command_ctrl_g_ = driver.find_element(By.CSS_SELECTOR,
                                                           "#navbar-search")
    search_or_type_a_command_ctrl_g_.send_keys("sales order ")

    # 5. Click 'Sales Order List'
    sales_order_list = driver.find_element(By.XPATH,
                                           "//li[. = 'Sales Order List']")
    sales_order_list.click()

    # 6. Does 'Sales Order6' contain 'Sales Order'?
    sales_order6 = driver.find_element(By.XPATH,
                                       "//div[. = 'Sales Order']")
    step_output = sales_order6.text
    assert step_output and ("Sales Order" in step_output)

    # 7. Click 'New4'
    new4 = driver.find_element(By.XPATH,
                               "//button[. = 'New']")
    new4.click()

    # 8. Click 'INPUT55'
    input55 = driver.find_element(By.XPATH,
                                  "//div[3]/div/div[1]/form/div[3]//input")
    input55.click()

    # 9. Type 'air' in 'INPUT55'
    input55 = driver.find_element(By.XPATH,
                                  "//div[3]/div/div[1]/form/div[3]//input")
    input55.send_keys("air")

    # 10. Click 'LI7'
    li7 = driver.find_element(By.XPATH,
                              "//div[3]/div/div[2]/div[1]/div/div/ul/li[1]")
    li7.click()

    # 11. Click 'clickdttextbox'
    clickdttextbox = driver.find_element(By.XPATH,
                                         "//div[4]/div/div[2]/div/input")
    clickdttextbox.click()

    # 12. Click 'svg3'
    svg3 = driver.find_element(By.XPATH,
                               "//div[3]/nav/div[3]/*")
    svg3.click()

    # 13. Click 'svg3'
    svg3 = driver.find_element(By.XPATH,
                               "//div[3]/nav/div[3]/*")
    svg3.click()

    # 14. Click 'svg3'
    svg3 = driver.find_element(By.XPATH,
                               "//div[3]/nav/div[3]/*")
    svg3.click()

    # 15. Click 'svg3'
    svg3 = driver.find_element(By.XPATH,
                               "//div[3]/nav/div[3]/*")
    svg3.click()

    # 16. Click 'svg3'
    svg3 = driver.find_element(By.XPATH,
                               "//div[3]/nav/div[3]/*")
    svg3.click()

    # 17. Click 'svg3'
    svg3 = driver.find_element(By.XPATH,
                               "//div[3]/nav/div[3]/*")
    svg3.click()

    # 18. Click '21'
    _21 = driver.find_element(By.XPATH,
                              "//div[5][. = '2']")
    _21.click()

    # 19. Get text from 'INPUT55'
    input55 = driver.find_element(By.XPATH,
                                  "//div[3]/div/div[1]/form/div[3]//input")
    step_output = input55.get_attribute("value")
    ExpectedCustNm = step_output

    # 20. Get text from 'INPUT1271'
    input1271 = driver.find_element(By.XPATH,
                                    "//div[3]/div/div[2]/form/div[2]//input")
    step_output = input1271.get_attribute("value")
    ExpectedCompany = step_output

    # 21. Get text from 'clickdttextbox'
    clickdttextbox = driver.find_element(By.XPATH,
                                         "//div[4]/div/div[2]/div/input")
    step_output = clickdttextbox.get_attribute("value")
    ExpectedDeliveryDate = step_output

    # 22. Click 'DIV25'
    div25 = driver.find_element(By.XPATH,
                                "//div[2]/div/div[2]/div[2]/div[1]/div/div/div[2]")
    div25.click()

    # 23. Type '[NONE]' in 'item code123'
    item_code123 = driver.find_element(By.XPATH,
                                       "//input[@placeholder = 'Item Code']")
    item_code123.send_keys(" ")

    # 24. Click 'LI6'
    li6 = driver.find_element(By.XPATH,
                              "//div[2]/div[1]/div/div/div[2]/div[1]/div//li[1]")
    li6.click()

    # 25. Does 'New Sales Order 126' contain 'New Sales Order 1'?
    new_sales_order_126 = driver.find_element(By.XPATH,
                                              "//div[. = 'New Sales Order 1']")
    step_output = new_sales_order_126.text
    assert step_output and ("New Sales Order 1" in step_output)

    # 26. Does 'status1' contain 'Not Saved'?
    status1 = driver.find_element(By.XPATH,
                                  "//span/span[. = 'Not Saved']")
    step_output = status1.text
    assert step_output and ("Not Saved" in step_output)

    # 27. Click 'saveclick'
    saveclick = driver.find_element(By.XPATH,
                                    "//button[. = 'Save']")
    saveclick.click()

    # 28. Does 'Draft' contain 'Draft'?
    draft = driver.find_element(By.XPATH,
                                "//span/span[. = 'Draft']")
    step_output = draft.text
    assert step_output and ("Draft" in step_output)

    # 29. Click 'Submit8'
    submit8 = driver.find_element(By.XPATH,
                                  "//button[. = 'Submit']")
    submit8.click()

    # 30. Click 'Yes6'
    yes6 = driver.find_element(By.XPATH,
                               "//button[. = 'Yes']")
    yes6.click()

    # 31. Does 'sale112' contain 'Sales Order has been submitted successfully'?
    sale112 = driver.find_element(By.XPATH,
                                  "//div[. = 'Sales Order has been submitted successfully']")
    step_output = sale112.text
    assert step_output and (
        "Sales Order has been submitted successfully" in step_output)

    # 32. Does 'To Deliver and Bill3' contain 'To Deliver and Bill'?
    to_deliver_and_bill3 = driver.find_element(By.XPATH,
                                               "//span/span[. = 'To Deliver and Bill']")
    step_output = to_deliver_and_bill3.text
    assert step_output and ("To Deliver and Bill" in step_output)

    # 33. Get text from 'Good Tree Holdings, LLC1'
    good_tree_holdings_llc1 = driver.find_element(By.XPATH,
                                                  "//div[. = 'Good Tree Holdings, LLC']")
    step_output = good_tree_holdings_llc1.get_attribute("value")
    ActualCustNm = step_output

    # 34. Compares '{ExpectedCustNm}' with '{ActualCustNm}'
    step_output = driver.addons().execute(
        StringUtils.comparetwostrings(
            firstString=f'{ExpectedCustNm}',
            secondString=f'{ActualCustNm}',
            ignoreCase=False,
            expectedResult=0))

    # 35. Get text from 'expectedsalesordernumber'
    expectedsalesordernumber = driver.find_element(By.XPATH,
                                                   "//h6[. = 'SAL-ORD-2021-00410']")
    step_output = expectedsalesordernumber.get_attribute("value")
    ExpectedSaleOrderno = step_output

    # 36. Click 'Create46'
    create46 = driver.find_element(By.XPATH,
                                   "//button[. = '\t\t\t\tCreate ']")
    create46.click()

    # 37. Click 'Production Plan'
    production_plan = driver.find_element(By.XPATH,
                                          "//li[1]/a[. = 'Production Plan']")
    production_plan.click()

    # 38. Does 'New Production Plan 1' contain 'New Production Plan 1'?
    new_production_plan_1 = driver.find_element(By.XPATH,
                                                "//div[. = 'New Production Plan 1']")
    step_output = new_production_plan_1.text
    assert step_output and ("New Production Plan 1" in step_output)

    # 39. Does 'draftstat' contain 'Draft'?
    draftstat = driver.find_element(By.XPATH,
                                    "//span/span[. = 'Draft']")
    step_output = draftstat.text
    assert step_output and ("Draft" in step_output)

    # 40. Get text from 'gettext67589'
    gettext67589 = driver.find_element(By.XPATH,
                                       "//div[2]/div/div[1]/form//input")
    step_output = gettext67589.get_attribute("value")
    ActualCompany = step_output

    # 41. Get text from 'getcomp123'
    getcomp123 = driver.find_element(By.XPATH,
                                     "//div[2]/div/div[1]/form//input")
    step_output = getcomp123.get_attribute("value")
    ActualCompany1 = step_output

    # 42. Get text from 'getsalesordernumber'
    getsalesordernumber = driver.find_element(By.XPATH,
                                              "//div[4]/div[2]/div/form/div[2]/div/div[2]/div[2]/div[1]/div/div/div[2]")
    step_output = getsalesordernumber.get_attribute("value")
    ActualSalesOrdernumber = step_output

    # 43. Compares '{ExpectedCompany}' with '{ActualCompany1}'
    step_output = driver.addons().execute(
        StringUtils.comparetwostrings(
            firstString=f'{ExpectedCompany}',
            secondString=f'{ActualCompany1}',
            ignoreCase=False,
            expectedResult=0))

    # 44. Compares '{ExpectedSaleOrderno}' with '{ActualSalesOrdernumber}'
    step_output = driver.addons().execute(
        StringUtils.comparetwostrings(
            firstString=f'{ExpectedSaleOrderno}',
            secondString=f'{ActualSalesOrdernumber}',
            ignoreCase=False,
            expectedResult=0))

    # 45. Click 'Good Tree Holdings, LLC6'
    good_tree_holdings_llc6 = driver.find_element(By.XPATH,
                                                  "//div[4]/div/a[. = '\n\t\t\t\tGood Tree Holdings, LLC']")
    good_tree_holdings_llc6.click()

    # 46. Click 'saveclick'
    saveclick = driver.find_element(By.XPATH,
                                    "//button[. = 'Save']")
    saveclick.click()

    # 47. Does 'draftstat' contain 'Draft'?
    draftstat = driver.find_element(By.XPATH,
                                    "//span/span[. = 'Draft']")
    step_output = draftstat.text
    assert step_output and ("Draft" in step_output)

    # 48. Click 'Submit18'
    submit18 = driver.find_element(By.XPATH,
                                   "//div[4]//button[. = 'Submit']")
    submit18.click()

    # 49. Click 'Yes7'
    yes7 = driver.find_element(By.XPATH,
                               "//div[2]/div/div//button[. = 'Yes']")
    yes7.click()

    # 50. Does 'Saved10' contain 'Saved'?
    saved10 = driver.find_element(By.XPATH,
                                  "//div[6]/div[. = 'Saved']")
    step_output = saved10.text
    assert step_output and ("Saved" in step_output)

    # 51. Does 'Not Started' contain 'Not Started'?
    not_started = driver.find_element(By.XPATH,
                                      "//span/span[. = 'Not Started']")
    step_output = not_started.text
    assert step_output and ("Not Started" in step_output)

    # 52. Logout from the application
    test_logout.test_main(driver)
