import time

from selenium.webdriver.common.by import By
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Bloomy_Core
    Package: TestProject.Generated.Tests.BloomyCore
    Test: WFSalesOrder_Sales Order -> Material Req
    Generated by: Rahul Prakash (rahulprakash0862@gmail.com)
    Generated on 05/06/2021, 04:08:30
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="5o-UXmLZug6gaKmDcoeI6tT7NM19XyG1qnolFybLul4",
                              project_name="Bloomy_Core",
                              job_name="WFSalesOrder_Sales Order -> Material Req")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    """1.Go to the Material Request doctype.( Desk >> Stock) or Type Material Request in search bar.

    2. Click on New.3.Enter the required by date.4.Select from one of the purposes.5. click on \"Get Items\" button  can fetch Items from Sales Order.6. Select Sales Order and Hit on Get Items6.Select Required Date.7. Save and Submit..
    """
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "https://epitest-demo.bloomstack.io/"

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Is 'Login' visible?
    login = driver.find_element(By.XPATH,
                                "//a[. = 'Login']")
    assert login.is_displayed()

    # 3. Click 'Login'
    login = driver.find_element(By.XPATH,
                                "//a[. = 'Login']")
    login.click()

    # 4. Click 'Email Address'
    email_address = driver.find_element(By.CSS_SELECTOR,
                                        "#login_email")
    email_address.click()

    # 5. Type 'rahul.prakash@extrapreneursindia.com' in 'Email Address'
    email_address = driver.find_element(By.CSS_SELECTOR,
                                        "#login_email")
    email_address.send_keys("rahul.prakash@extrapreneursindia.com")

    # 6. Click 'Password'
    password = driver.find_element(By.CSS_SELECTOR,
                                   "#login_password")
    password.click()

    # 7. Type 'epi@123' in 'Password'
    password = driver.find_element(By.CSS_SELECTOR,
                                   "#login_password")
    password.send_keys("epi@123")

    # 8. Click 'Login1'
    login1 = driver.find_element(By.XPATH,
                                 "//button[. = '\n\t\t\t\tLogin']")
    login1.click()

    # 9. Click 'Search or type a command (Ctrl + G)'
    search_or_type_a_command_ctrl_g_ = driver.find_element(By.CSS_SELECTOR,
                                                           "#navbar-search")
    search_or_type_a_command_ctrl_g_.click()

    # 10. Type 'material' in 'Search or type a command (Ctrl + G)'
    search_or_type_a_command_ctrl_g_ = driver.find_element(By.CSS_SELECTOR,
                                                           "#navbar-search")
    search_or_type_a_command_ctrl_g_.send_keys("material")

    # 11. Click 'Material Request List1'
    material_request_list1 = driver.find_element(By.XPATH,
                                                 "//p[. = 'Material Request List']")
    material_request_list1.click()

    # 12. Does 'Material Request' contain 'Material Request'?
    material_request = driver.find_element(By.XPATH,
                                           "//div[. = 'Material Request']")
    step_output = material_request.text
    assert step_output and ("Material Request" in step_output)
    time.sleep(2)

    # 13. Click 'New12'
    new12 = driver.find_element(By.XPATH,
                                "//button[. = 'New']")
    new12.click()

    # 14. Does 'DIV47' contain '[NONE]'?
    div47 = driver.find_element(By.XPATH,
                                "//div[3]/div[1]/div/div/div[1]/h1/div[2]")
    step_output = div47.text
    assert step_output and ("" in step_output)

    # 15. Click 'INPUT83'
    input83 = driver.find_element(By.XPATH,
                                  "//div[2]/form/div[1]/div/div[2]/div/input")
    input83.click()

    # 16. Click 'path'
    path = driver.find_element(By.XPATH,
                               "//div[1]/nav/div[3]//*[name()='path']")
    path.click()

    # 17. Click 'path'
    path = driver.find_element(By.XPATH,
                               "//div[1]/nav/div[3]//*[name()='path']")
    path.click()

    # 18. Click '288'
    _288 = driver.find_element(By.XPATH,
                               "//div[32][. = '28']")
    _288.click()

    # 19. Click 'INPUT84'
    input84 = driver.find_element(By.XPATH,
                                  "//div[2]/form/div[2]//input")
    input84.click()

    # 20. Type 'vap' in 'INPUT84'
    input84 = driver.find_element(By.XPATH,
                                  "//div[2]/form/div[2]//input")
    input84.send_keys("vap")

    # 21. Click 'VapeCo6'
    vapeco6 = driver.find_element(By.XPATH,
                                  "//strong[. = 'VapeCo']")
    vapeco6.click()

    # 22. Scroll window by ('0','300')
    driver.execute_script("window.scrollBy(0,300)")

    # 23. Scroll window by ('0','100')
    driver.execute_script("window.scrollBy(0,100)")

    # 24. Click 'DIV43'
    div43 = driver.find_element(By.XPATH,
                                "//div[2]/div/div[2]/div[2]/div[1]/div/div/div[2]")
    div43.click()

    # 25. Click 'P49'
    p49 = driver.find_element(By.XPATH,
                              "//div[1]/div/div/div/ul/li[1]/a/p")
    p49.click()

    # 26. Scroll window by ('0','-300')
    driver.execute_script("window.scrollBy(0,-300)")

    # 27. Scroll window by ('0','-100')
    driver.execute_script("window.scrollBy(0,-100)")

    # 28. Click 'Get items from'
    get_items_from = driver.find_element(By.XPATH,
                                         "//button[. = '\t\t\t\tGet items from ']")
    get_items_from.click()

    # 29. Click 'Sales Order8'
    sales_order8 = driver.find_element(By.XPATH,
                                       "//li[2]/a[. = 'Sales Order']")
    sales_order8.click()

    # 30. Is 'DIV57' visible?
    div57 = driver.find_element(By.XPATH,
                                "//div[5]/div[2]/div/div[1]/div/div[1]")
    assert div57.is_displayed()

    # 31. Click 'INPUT100'
    input100 = driver.find_element(By.XPATH,
                                   "//div[21]/div/div/input")
    input100.click()

    # 32. Click 'Get Items1'
    get_items1 = driver.find_element(By.XPATH,
                                     "//button[. = 'Get Items']")
    get_items1.click()

    # 33. Click 'Save26'
    save26 = driver.find_element(By.XPATH,
                                 "//span[. = 'Save']")
    save26.click()

    # 34. Click 'Close3'
    close3 = driver.find_element(By.XPATH,
                                 "//span[. = 'Close']")
    close3.click()

    # 35. Does 'Saved2' contain 'Saved'?
    saved2 = driver.find_element(By.XPATH,
                                 "//div[. = 'Saved']")
    step_output = saved2.text
    assert step_output and ("Saved" in step_output)

    # 36. Click 'Submit13'
    submit13 = driver.find_element(By.XPATH,
                                   "//button/span[. = 'Submit']")
    submit13.click()

    # 37. Click 'Yes1'
    yes1 = driver.find_element(By.XPATH,
                               "//button[. = 'Yes']")
    yes1.click()

    # 38. Click 'Close3'
    close3 = driver.find_element(By.XPATH,
                                 "//span[. = 'Close']")
    close3.click()

    # 39. Does 'Saved26' contain 'Saved'?
    saved26 = driver.find_element(By.XPATH,
                                  "//div[2]/div[. = 'Saved']")
    step_output = saved26.text
    assert step_output and ("Saved" in step_output)

    # 40. Does 'DIV47' contain '[NONE]'?
    div47 = driver.find_element(By.XPATH,
                                "//div[3]/div[1]/div/div/div[1]/h1/div[2]")
    step_output = div47.text
    assert step_output and ("" in step_output)

    # 41. Click 'Settings2'
    settings2 = driver.find_element(By.XPATH,
                                    "//span[. = '      Settings']")
    settings2.click()

    # 42. Click 'Logout1'
    logout1 = driver.find_element(By.XPATH,
                                  "//a[. = '       Logout']")
    logout1.click()

    # 43. Does 'Cannabis Vapour Pen' contain 'Cannabis Vapour Pen'?
    cannabis_vapour_pen = driver.find_element(By.XPATH,
                                              "//h1[1][. = 'Cannabis Vapour Pen']")
    step_output = cannabis_vapour_pen.text
    assert step_output and ("Cannabis Vapour Pen" in step_output)
