import time

from selenium.webdriver.common.by import By
from selenium.webdriver.support.select import Select
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Bloomy_Core
    Package: TestProject.Generated.Tests.BloomyCore
    Test: CreateAssetMovement_TestCase
    Generated by: Rahul Prakash (rahulprakash0862@gmail.com)
    Generated on 05/28/2021, 07:15:18
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="5o-UXmLZug6gaKmDcoeI6tT7NM19XyG1qnolFybLul4",
                              project_name="Bloomy_Core",
                              job_name="CreateAssetMovement_TestCase")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    """Generated By:Rahul."""
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "https://epitest-demo.bloomstack.io/"

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Does 'Login' contain 'Login'?
    login = driver.find_element(By.XPATH,
                                "//a[. = 'Login']")
    step_output = login.text
    assert step_output and ("Login" in step_output)

    # 3. Click 'Login'
    login = driver.find_element(By.XPATH,
                                "//a[. = 'Login']")
    login.click()

    # 4. Click 'Email Address'
    email_address = driver.find_element(By.CSS_SELECTOR,
                                        "#login_email")
    email_address.click()

    # 5. Type 'testautomationuser@bloomstack.com' in 'Email Address'
    email_address = driver.find_element(By.CSS_SELECTOR,
                                        "#login_email")
    email_address.send_keys("testautomationuser@bloomstack.com")

    # 6. Click 'Password'
    password = driver.find_element(By.CSS_SELECTOR,
                                   "#login_password")
    password.click()

    # 7. Type 'epi@123' in 'Password'
    password = driver.find_element(By.CSS_SELECTOR,
                                   "#login_password")
    password.send_keys("epi@123")

    # 8. Click 'Login1'
    login1 = driver.find_element(By.XPATH,
                                 "//button[. = '\n\t\t\t\tLogin']")
    login1.click()

    # 9. Click 'Search or type a command (Ctrl + G)'
    search_or_type_a_command_ctrl_g_ = driver.find_element(By.CSS_SELECTOR,
                                                           "#navbar-search")
    search_or_type_a_command_ctrl_g_.click()

    # 10. Type 'asset move' in 'Search or type a command (Ctrl + G)'
    search_or_type_a_command_ctrl_g_ = driver.find_element(By.CSS_SELECTOR,
                                                           "#navbar-search")
    search_or_type_a_command_ctrl_g_.send_keys("asset move")

    # 11. Click 'Asset Movement List1'
    asset_movement_list1 = driver.find_element(By.XPATH,
                                               "//p[. = 'Asset Movement List']")
    asset_movement_list1.click()

    # 12. Does 'Asset Movement2' contain 'Asset Movement'?
    asset_movement2 = driver.find_element(By.XPATH,
                                          "//div[. = 'Asset Movement']")
    step_output = asset_movement2.text
    assert step_output and ("Asset Movement" in step_output)
    time.sleep(2)

    # 13. Click 'New1'
    new1 = driver.find_element(By.XPATH,
                               "//span[. = 'New']")
    new1.click()

    # 14. Does 'DIV10' contain '[NONE]'?
    div10 = driver.find_element(By.XPATH,
                                "//div[3]/div[1]/div/div/div[1]/h1/div[2]")
    step_output = div10.text
    assert step_output and ("" in step_output)

    # 15. Click 'INPUT32'
    input32 = driver.find_element(By.XPATH,
                                  "//div[2]/div/div[2]/div[1]/div/div/input")
    input32.click()

    # 16. Type 'vap' in 'INPUT32'
    input32 = driver.find_element(By.XPATH,
                                  "//div[2]/div/div[2]/div[1]/div/div/input")
    input32.send_keys("vap")

    # 17. Click 'VapeCo6'
    vapeco6 = driver.find_element(By.XPATH,
                                  "//p[. = 'VapeCo']")
    vapeco6.click()

    # 18. Click 'INPUT33'
    input33 = driver.find_element(By.XPATH,
                                  "//form/div/div/div[2]/div/input")
    input33.click()

    # 19. Click 'svg3'
    svg3 = driver.find_element(By.XPATH,
                               "//div[3]/*[name()='svg']")
    svg3.click()

    # 20. Click '302'
    _302 = driver.find_element(By.XPATH,
                               "//div[32][. = '30']")
    _302.click()

    # 21. Click 'SELECT5'
    select5 = driver.find_element(By.XPATH,
                                  "//div[2]/div/select")
    select5.click()

    # 22. Select the 'Transfer' option in 'SELECT5'
    select5 = driver.find_element(By.XPATH,
                                  "//div[2]/div/select")
    Select(select5).select_by_value("Transfer")

    # 23. Click 'SELECT5'
    select5 = driver.find_element(By.XPATH,
                                  "//div[2]/div/select")
    select5.click()

    # 24. Click 'DIV11'
    div11 = driver.find_element(By.XPATH,
                                "//form/div/div/div[2]/div[2]/div[1]/div/div/div[2]")
    div11.click()

    # 25. Click 'ACC-ASS-2021-00062'
    acc_ass_2021_00062 = driver.find_element(By.XPATH,
                                             "//p[. = 'ACC-ASS-2021-00062']")
    acc_ass_2021_00062.click()

    # 26. Click 'Target Location1'
    target_location1 = driver.find_element(By.XPATH,
                                           "//input[@placeholder = 'Target Location']")
    target_location1.click()

    # 27. Click 'india9'
    india9 = driver.find_element(By.XPATH,
                                 "//p[. = 'india']")
    india9.click()

    # 28. Click 'Save5'
    save5 = driver.find_element(By.XPATH,
                                "//span[. = 'Save']")
    save5.click()

    # 29. Does 'Saved' contain 'Saved'?
    saved = driver.find_element(By.XPATH,
                                "//div[. = 'Saved']")
    step_output = saved.text
    assert step_output and ("Saved" in step_output)

    # 30. Does 'DIV10' contain '[NONE]'?
    div10 = driver.find_element(By.XPATH,
                                "//div[3]/div[1]/div/div/div[1]/h1/div[2]")
    step_output = div10.text
    assert step_output and ("" in step_output)

    # 31. Click 'Settings'
    settings = driver.find_element(By.XPATH,
                                   "//span[. = '      Settings']")
    settings.click()

    # 32. Click 'Logout'
    logout = driver.find_element(By.XPATH,
                                 "//a[. = '       Logout']")
    logout.click()

    # 33. Is 'Login' visible?
    login = driver.find_element(By.XPATH,
                                "//a[. = 'Login']")
    assert login.is_displayed()
