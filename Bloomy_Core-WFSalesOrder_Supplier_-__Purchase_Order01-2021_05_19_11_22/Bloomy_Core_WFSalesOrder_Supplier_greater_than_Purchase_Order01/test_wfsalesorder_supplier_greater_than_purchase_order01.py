from selenium.webdriver.common.by import By
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Bloomy_Core
    Package: TestProject.Generated.Tests.BloomyCore
    Test: WFSalesOrder_Supplier -> Purchase Order01
    Generated by: Rahul Prakash (rahulprakash0862@gmail.com)
    Generated on 05/19/2021, 11:22:42
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="5o-UXmLZug6gaKmDcoeI6tT7NM19XyG1qnolFybLul4",
                              project_name="Bloomy_Core",
                              job_name="WFSalesOrder_Supplier -> Purchase Order01")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    """1.Go to the Supplier.

    2. On supplier Dashboard in Orders click on Purchase Order \"+\" sign.3.Select Reqd By Date.4. Select Item.5.Select Qty.6. Save and Submit..
    """
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "https://epitest-demo.bloomstack.io/"

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Does 'Cannabis Vapour Pen' contain 'Cannabis Vapour Pen'?
    cannabis_vapour_pen = driver.find_element(By.XPATH,
                                              "//h1[1][. = 'Cannabis Vapour Pen']")
    step_output = cannabis_vapour_pen.text
    assert step_output and ("Cannabis Vapour Pen" in step_output)

    # 3. Click 'Login'
    login = driver.find_element(By.XPATH,
                                "//a[. = 'Login']")
    login.click()

    # 4. Does 'Login2' contain 'Login'?
    login2 = driver.find_element(By.XPATH,
                                 "//span[. = 'Login']")
    step_output = login2.text
    assert step_output and ("Login" in step_output)

    # 5. Click 'Email Address'
    email_address = driver.find_element(By.CSS_SELECTOR,
                                        "#login_email")
    email_address.click()

    # 6. Type 'rahul.prakash@extrapreneursindia.com' in 'Email Address'
    email_address = driver.find_element(By.CSS_SELECTOR,
                                        "#login_email")
    email_address.send_keys("rahul.prakash@extrapreneursindia.com")

    # 7. Click 'Password'
    password = driver.find_element(By.CSS_SELECTOR,
                                   "#login_password")
    password.click()

    # 8. Type 'epi@123' in 'Password'
    password = driver.find_element(By.CSS_SELECTOR,
                                   "#login_password")
    password.send_keys("epi@123")

    # 9. Click 'Login1'
    login1 = driver.find_element(By.XPATH,
                                 "//button[. = '\n\t\t\t\tLogin']")
    login1.click()

    # 10. Click 'Search or type a command (Ctrl + G)'
    search_or_type_a_command_ctrl_g_ = driver.find_element(By.CSS_SELECTOR,
                                                           "#navbar-search")
    search_or_type_a_command_ctrl_g_.click()

    # 11. Type 'supplier' in 'Search or type a command (Ctrl + G)'
    search_or_type_a_command_ctrl_g_ = driver.find_element(By.CSS_SELECTOR,
                                                           "#navbar-search")
    search_or_type_a_command_ctrl_g_.send_keys("supplier")

    # 12. Click 'Supplier List'
    supplier_list = driver.find_element(By.XPATH,
                                        "//p[. = 'Supplier List']")
    supplier_list.click()

    # 13. Does 'Supplier' contain 'Supplier'?
    supplier = driver.find_element(By.XPATH,
                                   "//div[. = 'Supplier']")
    step_output = supplier.text
    assert step_output and ("Supplier" in step_output)

    # 14. Click 'asradr'
    asradr = driver.find_element(By.XPATH,
                                 "//a[. = '\n\t\t\t\tasradr\n\t\t\t\t']")
    asradr.click()

    # 15. Does 'DIV47' contain '[NONE]'?
    div47 = driver.find_element(By.XPATH,
                                "//div[3]/div[1]/div/div/div[1]/h1/div[2]")
    step_output = div47.text
    assert step_output and ("" in step_output)

    # 16. Click 'I9'
    i9 = driver.find_element(By.XPATH,
                             "//div[1]/div[2]/div[1]/button/i")
    i9.click()

    # 17. Does 'DIV36' contain '[NONE]'?
    div36 = driver.find_element(By.XPATH,
                                "//div[4]/div[1]/div/div/div[1]/h1/div[2]")
    step_output = div36.text
    assert step_output and ("" in step_output)

    # 18. Click 'INPUT92'
    input92 = driver.find_element(By.XPATH,
                                  "//div[3]/div/div[2]/form/div[2]//input")
    input92.click()

    # 19. Click 'svg3'
    svg3 = driver.find_element(By.XPATH,
                               "//div[3]/nav/div[3]/*")
    svg3.click()

    # 20. Click 'svg3'
    svg3 = driver.find_element(By.XPATH,
                               "//div[3]/nav/div[3]/*")
    svg3.click()

    # 21. Click '25'
    _25 = driver.find_element(By.XPATH,
                              "//div[27][. = '25']")
    _25.click()

    # 22. Click 'INPUT93'
    input93 = driver.find_element(By.XPATH,
                                  "//div[1]/form/div[6]/div/div//input")
    input93.click()

    # 23. Type 'vap' in 'INPUT93'
    input93 = driver.find_element(By.XPATH,
                                  "//div[1]/form/div[6]/div/div//input")
    input93.send_keys("vap")

    # 24. Click 'VapeCo7'
    vapeco7 = driver.find_element(By.XPATH,
                                  "//li[. = 'VapeCo']")
    vapeco7.click()

    # 25. Scroll window by ('0','100')
    driver.execute_script("window.scrollBy(0,100)")

    # 26. Scroll window by ('0','300')
    driver.execute_script("window.scrollBy(0,300)")

    # 27. Scroll window by ('0','100')
    driver.execute_script("window.scrollBy(0,100)")

    # 28. Click 'Add Row13'
    add_row13 = driver.find_element(By.XPATH,
                                    "//div[8]//button[. = '\n\t\t\t\t\t\t\tAdd Row']")
    add_row13.click()

    # 29. Click 'DIV51'
    div51 = driver.find_element(By.XPATH,
                                "//div[2]/div/div[2]/div[2]/div[1]/div/div/div[2]")
    div51.click()

    # 30. Click 'Finished Oil, Dry Goods, Extracted Ja...1'
    finished_oil_dry_goods_extracted_ja_1 = driver.find_element(By.XPATH,
                                                                "//span[. = 'Finished Oil, Dry Goods, Extracted Jack Herer Cannabis Oil']")
    finished_oil_dry_goods_extracted_ja_1.click()

    # 31. Scroll window by ('0','-58')
    driver.execute_script("window.scrollBy(0,-58)")

    # 32. Click 'Save4'
    save4 = driver.find_element(By.XPATH,
                                "//div[4]//button[. = 'Save']")
    save4.click()

    # 33. Scroll window by ('0','-442')
    driver.execute_script("window.scrollBy(0,-442)")

    # 34. Does 'Saved5' contain 'Saved'?
    saved5 = driver.find_element(By.XPATH,
                                 "//div[. = 'Saved']")
    step_output = saved5.text
    assert step_output and ("Saved" in step_output)

    # 35. Click 'Submit14'
    submit14 = driver.find_element(By.XPATH,
                                   "//span[. = 'Submit']")
    submit14.click()

    # 36. Click 'Yes'
    yes = driver.find_element(By.XPATH,
                              "//button[. = 'Yes']")
    yes.click()

    # 37. Does 'Saved9' contain 'Saved'?
    saved9 = driver.find_element(By.XPATH,
                                 "//div[3]/div[. = 'Saved']")
    step_output = saved9.text
    assert step_output and ("Saved" in step_output)

    # 38. Does 'Purchase Order2' contain 'Purchase Order'?
    purchase_order2 = driver.find_element(By.XPATH,
                                          "//div[1]/ul//a[. = 'Purchase Order']")
    step_output = purchase_order2.text
    assert step_output and ("Purchase Order" in step_output)

    # 39. Click 'Settings2'
    settings2 = driver.find_element(By.XPATH,
                                    "//span[. = '      Settings']")
    settings2.click()

    # 40. Click 'Logout1'
    logout1 = driver.find_element(By.XPATH,
                                  "//a[. = '       Logout']")
    logout1.click()

    # 41. Is 'Home' present?
    home = driver.find_element(By.XPATH,
                               "//a[. = '\n\t\tHome\n\t']")
