from addons.generate_date_time_current_future_or_past_ import GenerateDateTimeCurrentFutureOrPast
from selenium.webdriver.common.by import By
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
from subtests import test_login
from subtests import test_logout
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Bloomy_Core
    Package: TestProject.Generated.Tests.BloomyCore
    Test: Quotation_Authorise_TestCase
    Generated by: Meenal Kardale (meenal.kardale@extrapreneurs-india.com)
    Generated on 06/30/2021, 10:47:41
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="3J0RNM_48lLt_KM5Ab6s6A_HZzddmktVs_HhX77AjTM",
                              project_name="Bloomy_Core",
                              job_name="Quotation_Authorise_TestCase")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    """1. Go to the Quotation doctype( Desk>> Selling >> quotation) or Type quotation list in search bar.

    2. Open Quotation.3. Click on Authorize4. Send Authorization Request pop up window will get open.5. Enter contact email and contact person .6. Click on Submit.
    """
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "https://epitest-demo.bloomstack.io/"
    username = ""
    pwd = ""
    daydelidate = ""

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Login to the Application
    test_login.test_main(driver)

    # 3. Click 'Search or type a command (Ctrl + G)'
    search_or_type_a_command_ctrl_g_ = driver.find_element(By.CSS_SELECTOR,
                                                           "#navbar-search")
    search_or_type_a_command_ctrl_g_.click()

    # 4. Type 'quotation ' in 'Search or type a command (Ctrl + G)'
    search_or_type_a_command_ctrl_g_ = driver.find_element(By.CSS_SELECTOR,
                                                           "#navbar-search")
    search_or_type_a_command_ctrl_g_.send_keys("quotation ")

    # 5. Click 'Quotation List'
    quotation_list = driver.find_element(By.XPATH,
                                         "//li[. = 'Quotation List']")
    quotation_list.click()

    # 6. Does 'Quotation6' contain 'Quotation'?
    quotation6 = driver.find_element(By.XPATH,
                                     "//div[. = 'Quotation']")
    step_output = quotation6.text
    assert step_output and ("Quotation" in step_output)

    # 7. Click 'New4'
    new4 = driver.find_element(By.XPATH,
                               "//button[. = 'New']")
    new4.click()

    # 8. Click 'Customer3'
    customer3 = driver.find_element(By.XPATH,
                                    "//div[. = '\t\t\t\t\t\tCustomer\t\t\t\t\t']")
    customer3.click()

    # 9. Click 'INPUT62'
    input62 = driver.find_element(By.XPATH,
                                  "//div[1]/form/div[4]//input")
    input62.click()

    # 10. Type '[NONE]' in 'INPUT62'
    input62 = driver.find_element(By.XPATH,
                                  "//div[1]/form/div[4]//input")
    input62.send_keys(" ")

    # 11. Click 'P11'
    p11 = driver.find_element(By.XPATH,
                              "//div/div/div/ul/li[2]//p")
    p11.click()

    # 12. Click 'INPUT63'
    input63 = driver.find_element(By.XPATH,
                                  "//div[2]/form/div[2]/div/div[2]/div[1]/div//input")
    input63.click()

    # 13. Type 'vap' in 'INPUT63'
    input63 = driver.find_element(By.XPATH,
                                  "//div[2]/form/div[2]/div/div[2]/div[1]/div//input")
    input63.send_keys("vap")

    # 14. Click 'VapeCo2'
    vapeco2 = driver.find_element(By.XPATH,
                                  "//li[. = 'VapeCo']")
    vapeco2.click()

    # 15. Click 'INPUT60'
    input60 = driver.find_element(By.XPATH,
                                  "//div[4]/div/div[2]/div/input")
    input60.click()

    # 16. Positive values for future and negative for past dates
    step_output = driver.addons().execute(
        GenerateDateTimeCurrentFutureOrPast.futurepastaction(
            days=5,
            months=0,
            years=0,
            hours=0,
            minutes=0,
            format="dd"))
    daydelidate = step_output

    # 17. Click 'cal'
    cal = driver.find_element(By.XPATH,
                              f'//div[3]//div[. = {daydelidate}]')
    cal.click()

    # 18. Is 'New Quotation 1' visible?
    new_quotation_1 = driver.find_element(By.XPATH,
                                          "//div[. = 'New Quotation 1']")
    assert new_quotation_1.is_displayed()

    # 19. Does 'Not Saved2' contain 'Not Saved'?
    not_saved2 = driver.find_element(By.XPATH,
                                     "//span/span[. = 'Not Saved']")
    step_output = not_saved2.text
    assert step_output and ("Not Saved" in step_output)

    # 20. Click 'Add Row9'
    add_row9 = driver.find_element(By.XPATH,
                                   "//div[6]//button[. = '\n\t\t\t\t\t\t\tAdd Row']")
    add_row9.click()

    # 21. Click 'DIV32'
    div32 = driver.find_element(By.XPATH,
                                "//form/div/div/div[2]/div[2]/div[1]/div/div/div[2]")
    div32.click()

    # 22. Type '[NONE]' in 'Item Code'
    item_code = driver.find_element(By.XPATH,
                                    "//input[@placeholder = 'Item Code']")
    item_code.send_keys(" ")

    # 23. Click 'Item Code'
    item_code = driver.find_element(By.XPATH,
                                    "//input[@placeholder = 'Item Code']")
    item_code.click()

    # 24. Type '[NONE]' in 'Item Code'
    item_code = driver.find_element(By.XPATH,
                                    "//input[@placeholder = 'Item Code']")
    item_code.send_keys(" ")

    # 25. Click 'P12'
    p12 = driver.find_element(By.XPATH,
                              "//div[1]/div/div/div/ul/li[1]/a/p")
    p12.click()

    # 26. Click 'clicksabutton'
    clicksabutton = driver.find_element(By.XPATH,
                                        "//button[. = 'Save']")
    clicksabutton.click()

    # 27. Click 'Close7'
    close7 = driver.find_element(By.XPATH,
                                 "//span[. = 'Close']")
    close7.click()

    # 28. Does 'Draft' contain 'Draft'?
    draft = driver.find_element(By.XPATH,
                                "//span/span[. = 'Draft']")
    step_output = draft.text
    assert step_output and ("Draft" in step_output)

    # 29. Click 'Authorize'
    authorize = driver.find_element(By.XPATH,
                                    "//button[. = 'Authorize']")
    authorize.click()

    # 30. Click 'INPUT108'
    input108 = driver.find_element(By.XPATH,
                                   "//div[2]/div[1]/div/div[2]/div/div/div/form/div[1]//input")
    input108.click()

    # 31. Type 'tester@gmail.com' in 'INPUT108'
    input108 = driver.find_element(By.XPATH,
                                   "//div[2]/div[1]/div/div[2]/div/div/div/form/div[1]//input")
    input108.send_keys("tester@gmail.com")

    # 32. Click 'INPUT109'
    input109 = driver.find_element(By.XPATH,
                                   "//div[2]/div[1]/div/div[2]/div/div/div/form/div[2]//input")
    input109.click()

    # 33. Type 'Tester' in 'INPUT109'
    input109 = driver.find_element(By.XPATH,
                                   "//div[2]/div[1]/div/div[2]/div/div/div/form/div[2]//input")
    input109.send_keys("Tester")

    # 34. Click 'Submit10'
    submit10 = driver.find_element(By.XPATH,
                                   "//button[3][. = 'Submit']")
    submit10.click()

    # 35. Is 'The document SAL-QTN-2021-00409 has b...' visible?
    the_document_sal_qtn_2021_00409_has_b_ = driver.find_element(By.XPATH,
                                                                 "//div/div/div[2]/div/div[. = 'The document SAL-QTN-2021-00409 has been successfully emailed to Tester']")
    assert the_document_sal_qtn_2021_00409_has_b_.is_displayed()

    # 36. Click 'Close3'
    close3 = driver.find_element(By.XPATH,
                                 "//div[2]/div/div//span[. = 'Close']")
    close3.click()

    # 37. Logout from the application
    test_logout.test_main(driver)
