import time

from selenium.webdriver.common.by import By
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Bloomy_Core
    Package: TestProject.Generated.Tests.BloomyCore
    Test: CreateDeliveryNote_TestCase01
    Generated by: Rahul Prakash (rahulprakash0862@gmail.com)
    Generated on 05/26/2021, 08:47:18
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="5o-UXmLZug6gaKmDcoeI6tT7NM19XyG1qnolFybLul4",
                              project_name="Bloomy_Core",
                              job_name="CreateDeliveryNote_TestCase01")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "https://epitest-demo.bloomstack.io/"
    Username = "testautomationuser@bloomstack.com"
    Password = "epi@123"

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Click 'Login'
    login = driver.find_element(By.XPATH,
                                "//a[. = 'Login']")
    login.click()

    # 3. Click 'Email Address'
    email_address = driver.find_element(By.CSS_SELECTOR,
                                        "#login_email")
    email_address.click()

    # 4. Type '{Username}' in 'Email Address'
    email_address = driver.find_element(By.CSS_SELECTOR,
                                        "#login_email")
    email_address.send_keys(f'{Username}')

    # 5. Click 'Password'
    password = driver.find_element(By.CSS_SELECTOR,
                                   "#login_password")
    password.click()

    # 6. Type '{Password}' in 'Password'
    password = driver.find_element(By.CSS_SELECTOR,
                                   "#login_password")
    password.send_keys(f'{Password}')

    # 7. Click 'Login1'
    login1 = driver.find_element(By.XPATH,
                                 "//button[. = '\n\t\t\t\tLogin']")
    login1.click()

    # 8. Click 'Stock'
    stock = driver.find_element(By.XPATH,
                                "//div[. = '\n                Stock\n              ']")
    stock.click()

    # 9. Does 'Stock1' contain 'Stock'?
    stock1 = driver.find_element(By.XPATH,
                                 "//div[. = 'Stock']")
    step_output = stock1.text
    assert step_output and ("Stock" in step_output)

    # 10. Click 'Delivery Note'
    delivery_note = driver.find_element(By.XPATH,
                                        "//div/a[. = 'Delivery Note']")
    delivery_note.click()

    # 11. Does 'Delivery Note1' contain 'Delivery Note'?
    delivery_note1 = driver.find_element(By.XPATH,
                                         "//div[. = 'Delivery Note']")
    step_output = delivery_note1.text
    assert step_output and ("Delivery Note" in step_output)
    time.sleep(2)

    # 12. Click 'New1'
    new1 = driver.find_element(By.XPATH,
                               "//span[. = 'New']")
    new1.click()

    # 13. Does 'DIV1' contain '[NONE]'?
    div1 = driver.find_element(By.XPATH,
                               "//div[4]/div[1]/div/div/div[1]/h1/div[2]")
    step_output = div1.text
    assert step_output and ("" in step_output)

    # 14. Click 'INPUT'
    input = driver.find_element(By.XPATH,
                                "//div[2]/form/div[2]/div/div[2]/div[1]/div//input")
    input.click()

    # 15. Type 'va' in 'INPUT'
    input = driver.find_element(By.XPATH,
                                "//div[2]/form/div[2]/div/div[2]/div[1]/div//input")
    input.send_keys("va")

    # 16. Click 'VapeCo'
    vapeco = driver.find_element(By.XPATH,
                                 "//strong[. = 'VapeCo']")
    vapeco.click()

    # 17. Click 'INPUT1'
    input1 = driver.find_element(By.XPATH,
                                 "//div[3]/div[2]/div[1]/form//input")
    input1.click()

    # 18. Click 'Airfield Supply Co., Retailer, San Jo...'
    airfield_supply_co_retailer_san_jo_ = driver.find_element(By.XPATH,
                                                              "//span[. = 'Airfield Supply Co., Retailer, San Jose']")
    airfield_supply_co_retailer_san_jo_.click()

    # 19. Scroll window by ('0','200')
    driver.execute_script("window.scrollBy(0,200)")

    # 20. Scroll window by ('0','200')
    driver.execute_script("window.scrollBy(0,200)")

    # 21. Scroll window by ('0','200')
    driver.execute_script("window.scrollBy(0,200)")

    # 22. Click 'DIV'
    div = driver.find_element(By.XPATH,
                              "//div[2]/div/div[2]/div[2]/div[1]/div/div/div[2]")
    div.click()

    # 23. Click 'Finished Oil, Dry Goods, Extracted Ja...'
    finished_oil_dry_goods_extracted_ja_ = driver.find_element(By.XPATH,
                                                               "//span[. = 'Finished Oil, Dry Goods, Extracted Jack Herer Cannabis Oil']")
    finished_oil_dry_goods_extracted_ja_.click()

    # 24. Does 'Select Batch Numbers' contain 'Select Batch Numbers'?
    select_batch_numbers = driver.find_element(By.XPATH,
                                               "//h4[. = 'Select Batch Numbers']")
    step_output = select_batch_numbers.text
    assert step_output and ("Select Batch Numbers" in step_output)

    # 25. Click 'Insert'
    insert = driver.find_element(By.XPATH,
                                 "//button[. = 'Insert']")
    insert.click()

    # 26. Click 'Save1'
    save1 = driver.find_element(By.XPATH,
                                "//span[. = 'Save']")
    save1.click()

    # 27. Scroll window by ('0','-600')
    driver.execute_script("window.scrollBy(0,-600)")

    # 28. Click 'Close'
    close = driver.find_element(By.XPATH,
                                "//div[2]/div/div//span[. = 'Close']")
    close.click()

    # 29. Does 'Saved' contain 'Saved'?
    saved = driver.find_element(By.XPATH,
                                "//div[. = 'Saved']")
    step_output = saved.text
    assert step_output and ("Saved" in step_output)

    # 30. Does 'DIV1' contain '[NONE]'?
    div1 = driver.find_element(By.XPATH,
                               "//div[4]/div[1]/div/div/div[1]/h1/div[2]")
    step_output = div1.text
    assert step_output and ("" in step_output)

    # 31. Click 'Submit'
    submit = driver.find_element(By.XPATH,
                                 "//button/span[. = 'Submit']")
    submit.click()

    # 32. Click 'Yes'
    yes = driver.find_element(By.XPATH,
                              "//button[. = 'Yes']")
    yes.click()

    # 33. Click 'Close'
    close = driver.find_element(By.XPATH,
                                "//div[2]/div/div//span[. = 'Close']")
    close.click()

    # 34. Does 'Delivery Note has been submitted succ...' contain 'Delivery Note has been submitted successfully'?
    delivery_note_has_been_submitted_succ_ = driver.find_element(By.XPATH,
                                                                 "//div[. = 'Delivery Note has been submitted successfully']")
    step_output = delivery_note_has_been_submitted_succ_.text
    assert step_output and (
        "Delivery Note has been submitted successfully" in step_output)

    # 35. Click 'Settings'
    settings = driver.find_element(By.XPATH,
                                   "//span[. = '      Settings']")
    settings.click()

    # 36. Click 'Logout'
    logout = driver.find_element(By.XPATH,
                                 "//a[. = '       Logout']")
    logout.click()
