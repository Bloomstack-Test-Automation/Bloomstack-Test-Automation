from addons.generate_date_time_current_future_or_past_ import GenerateDateTimeCurrentFutureOrPast
from addons.random_data_generator import RandomDataGenerator
from addons.string_utils import StringUtils
from distutils.util import strtobool
from selenium.webdriver.common.by import By
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
from subtests import test_login
from subtests import test_logout
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Bloomy_Core
    Package: TestProject.Generated.Tests.BloomyCore
    Test: LeadToQuotation_TestCase1
    Generated by: Meenal Kardale (meenal.kardale@extrapreneurs-india.com)
    Generated on 06/30/2021, 10:46:00
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="3J0RNM_48lLt_KM5Ab6s6A_HZzddmktVs_HhX77AjTM",
                              project_name="Bloomy_Core",
                              job_name="LeadToQuotation_TestCase1")
    step_settings = StepSettings(timeout=35000,
                                 sleep_time=1000,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    """1. Go to the lead doctype.(Desk>> CRM>>Lead) or Type \"Lead in search bar\".

    2. Open Lead.3.Click on the create button in the top right side and select quotation.  It will redirect you to on Quotation doctype.4. Lead ID and customer name will be fetched from the lead doctypeAlso address and contact will fetch from Lead doctype 5. Select company.6. Select Requested Delivery Date.7. Select \"\" Valid Till date\"\"should be future date.8. Add items and Qty and Rate.9. Add Cover tax, coupon code and payment term10. Save and Submit.
    """
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "https://epitest-demo.bloomstack.io/"
    ExpectedLeadOrgNm = ""
    ExpectedLeadAdd = ""
    ExpectedLeadMobile = ""
    ExpectedLeadID = ""
    ActualQuotationNm = ""
    username = ""
    pwd = ""
    ActualLeadIdQuotation = ""
    ActualMobileNoQuotation = ""
    ActualLeadOrgNm = ""
    RandomWordForLeadOrg = ""
    RandomDeliDate = ""
    RandomValidTilldate = ""

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Login to the Application
    test_login.test_main(driver)

    # 3. Click 'Search or type a command (Ctrl + G)'
    search_or_type_a_command_ctrl_g_ = driver.find_element(By.CSS_SELECTOR,
                                                           "#navbar-search")
    search_or_type_a_command_ctrl_g_.click()

    # 4. Type 'lead ' in 'Search or type a command (Ctrl + G)'
    search_or_type_a_command_ctrl_g_ = driver.find_element(By.CSS_SELECTOR,
                                                           "#navbar-search")
    search_or_type_a_command_ctrl_g_.send_keys("lead ")

    # 5. Click 'Lead List'
    lead_list = driver.find_element(By.XPATH,
                                    "//li[. = 'Lead List']")
    lead_list.click()

    # 6. Is 'Lead7' visible?
    lead7 = driver.find_element(By.XPATH,
                                "//div[. = 'Lead']")
    assert lead7.is_displayed()

    # 7. Click 'New1'
    new1 = driver.find_element(By.XPATH,
                               "//span[. = 'New']")
    new1.click()

    # 8. Click 'INPUT65'
    input65 = driver.find_element(By.XPATH,
                                  "//div[2]/div/div/form//input")
    input65.click()

    # 9. Click 'INPUT66'
    input66 = driver.find_element(By.XPATH,
                                  "//div[4]/div[2]/div[1]/form/div[3]//input")
    input66.click()

    # 10. Generate random word
    step_output = driver.addons().execute(
        RandomDataGenerator.generateword(
        ))
    RandomWordForLeadOrg = step_output

    # 11. Type '{RandomWordForLeadOrg}' in 'INPUT66'
    input66 = driver.find_element(By.XPATH,
                                  "//div[4]/div[2]/div[1]/form/div[3]//input")
    input66.send_keys(f'{RandomWordForLeadOrg}')

    # 12. Get text from 'INPUT66'
    input66 = driver.find_element(By.XPATH,
                                  "//div[4]/div[2]/div[1]/form/div[3]//input")
    step_output = input66.get_attribute("value")
    ExpectedLeadOrgNm = step_output

    # 13. Click 'INPUT67'
    input67 = driver.find_element(By.XPATH,
                                  "//div[7]/div[2]/div[1]/form/div[1]//input")
    input67.click()

    # 14. Type 'Test Address' in 'INPUT67'
    input67 = driver.find_element(By.XPATH,
                                  "//div[7]/div[2]/div[1]/form/div[1]//input")
    input67.send_keys("Test Address")

    # 15. Get text from 'INPUT67'
    input67 = driver.find_element(By.XPATH,
                                  "//div[7]/div[2]/div[1]/form/div[1]//input")
    step_output = input67.get_attribute("value")
    ExpectedLeadAdd = step_output

    # 16. Click 'INPUT68'
    input68 = driver.find_element(By.XPATH,
                                  "//div[7]/div[2]/div[1]/form/div[2]//input")
    input68.click()

    # 17. Type 'Add1' in 'INPUT68'
    input68 = driver.find_element(By.XPATH,
                                  "//div[7]/div[2]/div[1]/form/div[2]//input")
    input68.send_keys("Add1")

    # 18. Click 'INPUT69'
    input69 = driver.find_element(By.XPATH,
                                  "//div[7]/div[2]/div[1]/form/div[3]//input")
    input69.click()

    # 19. Type 'Add2' in 'INPUT69'
    input69 = driver.find_element(By.XPATH,
                                  "//div[7]/div[2]/div[1]/form/div[3]//input")
    input69.send_keys("Add2")

    # 20. Click 'INPUT70'
    input70 = driver.find_element(By.XPATH,
                                  "//div[7]/div[2]/div[1]/form/div[4]//input")
    input70.click()

    # 21. Type 'mumbai' in 'INPUT70'
    input70 = driver.find_element(By.XPATH,
                                  "//div[7]/div[2]/div[1]/form/div[4]//input")
    input70.send_keys("mumbai")

    # 22. Click 'INPUT71'
    input71 = driver.find_element(By.XPATH,
                                  "//div[7]/div[2]/div[1]/form/div[5]//input")
    input71.click()

    # 23. Type 'india' in 'INPUT71'
    input71 = driver.find_element(By.XPATH,
                                  "//div[7]/div[2]/div[1]/form/div[5]//input")
    input71.send_keys("india")

    # 24. Click 'INPUT72'
    input72 = driver.find_element(By.XPATH,
                                  "//div[7]/div[2]/div[2]/form/div[1]//input")
    input72.click()

    # 25. Type 'maharastra' in 'INPUT72'
    input72 = driver.find_element(By.XPATH,
                                  "//div[7]/div[2]/div[2]/form/div[1]//input")
    input72.send_keys("maharastra")

    # 26. Click 'INPUT73'
    input73 = driver.find_element(By.XPATH,
                                  "//div[7]/div[2]/div[2]/form/div[2]//input")
    input73.click()

    # 27. Clear 'Inputtext' contents
    inputtext = driver.find_element(By.XPATH,
                                    "//div[7]/div[2]/div[2]/form/div[2]//input")
    inputtext.clear()

    # 28. Type 'indi' in 'INPUT73'
    input73 = driver.find_element(By.XPATH,
                                  "//div[7]/div[2]/div[2]/form/div[2]//input")
    input73.send_keys("indi")

    # 29. Click 'India'
    india = driver.find_element(By.XPATH,
                                "//li[. = 'India']")
    india.click()

    # 30. Click 'INPUT74'
    input74 = driver.find_element(By.XPATH,
                                  "//div[2]/form/div[3]/div/div[2]/div/input")
    input74.click()

    # 31. Type '40066' in 'INPUT74'
    input74 = driver.find_element(By.XPATH,
                                  "//div[2]/form/div[3]/div/div[2]/div/input")
    input74.send_keys("40066")

    # 32. Click 'INPUT75'
    input75 = driver.find_element(By.XPATH,
                                  "//div[8]/div[2]/div/form/div[1]//input")
    input75.click()

    # 33. Type '6543787656' in 'INPUT75'
    input75 = driver.find_element(By.XPATH,
                                  "//div[8]/div[2]/div/form/div[1]//input")
    input75.send_keys("6543787656")

    # 34. Click 'INPUT76'
    input76 = driver.find_element(By.XPATH,
                                  "//div[8]/div[2]/div/form/div[2]//input")
    input76.click()

    # 35. Type '9876456765' in 'INPUT76'
    input76 = driver.find_element(By.XPATH,
                                  "//div[8]/div[2]/div/form/div[2]//input")
    input76.send_keys("9876456765")

    # 36. Get text from 'INPUT76'
    input76 = driver.find_element(By.XPATH,
                                  "//div[8]/div[2]/div/form/div[2]//input")
    step_output = input76.get_attribute("value")
    ExpectedLeadMobile = step_output

    # 37. Click 'INPUT77'
    input77 = driver.find_element(By.XPATH,
                                  "//div[8]/div[2]/div/form/div[3]//input")
    input77.click()

    # 38. Type '1234' in 'INPUT77'
    input77 = driver.find_element(By.XPATH,
                                  "//div[8]/div[2]/div/form/div[3]//input")
    input77.send_keys("1234")

    # 39. Is 'Not Saved' visible?
    not_saved = driver.find_element(By.XPATH,
                                    "//span/span[. = 'Not Saved']")
    assert not_saved.is_displayed()

    # 40. Click 'Save17'
    save17 = driver.find_element(By.XPATH,
                                 "//button[. = 'Save']")
    save17.click()

    # 41. Click 'SaveButton'
    savebutton = driver.find_element(By.XPATH,
                                     "//button[. = 'Save']")
    savebutton.click()

    # 42. Is 'Lead8' visible?
    lead8 = driver.find_element(By.XPATH,
                                "//span/span[. = 'Lead']")
    assert lead8.is_displayed()

    # 43. Get text from 'CRM-LEAD-2021-00331'
    crm_lead_2021_00331 = driver.find_element(By.XPATH,
                                              "//h6[. = 'CRM-LEAD-2021-00331']")
    step_output = crm_lead_2021_00331.get_attribute("value")
    ExpectedLeadID = step_output

    # 44. Click 'Create'
    create = driver.find_element(By.XPATH,
                                 "//button[. = '\t\t\t\tCreate ']")
    create.click()

    # 45. Click 'Quotation3'
    quotation3 = driver.find_element(By.XPATH,
                                     "//li[3]/a[. = 'Quotation']")
    quotation3.click()

    # 46. Click 'INPUT78'
    input78 = driver.find_element(By.XPATH,
                                  "//div[4]/div[2]/div[2]/div/div[3]/div[2]/div[1]/div[3]/div/div/div[2]/div[3]/div/div[2]/form/div[2]//input")
    input78.click()

    # 47. Type 'vap' in 'INPUT78'
    input78 = driver.find_element(By.XPATH,
                                  "//div[4]/div[2]/div[2]/div/div[3]/div[2]/div[1]/div[3]/div/div/div[2]/div[3]/div/div[2]/form/div[2]//input")
    input78.send_keys("vap")

    # 48. Click 'VapeCo6'
    vapeco6 = driver.find_element(By.XPATH,
                                  "//li[. = 'VapeCo']")
    vapeco6.click()

    # 49. Click 'SelectDeliveryDate'
    # DeliveryDate
    selectdeliverydate = driver.find_element(By.XPATH,
                                             "//div[2]/form/div[4]/div/div[2]/div/input")
    selectdeliverydate.click()

    # 50. Positive values for future and negative for past dates
    step_output = driver.addons().execute(
        GenerateDateTimeCurrentFutureOrPast.futurepastaction(
            days=10,
            months=0,
            years=0,
            hours=0,
            minutes=0,
            format="dd"))
    RandomDeliDate = step_output

    # 51. Click 'CalenderSelection'
    # ClickAndSelectDeliveryDate
    calenderselection = driver.find_element(By.XPATH,
                                            f'//div[5]//div[. = {RandomDeliDate}]')
    calenderselection.click()

    # 52. Click 'ValidDate'
    # ClickValidDate
    validdate = driver.find_element(By.XPATH,
                                    "//div[2]/form/div[5]/div/div[2]/div/input")
    validdate.click()

    # 53. Positive values for future and negative for past dates
    step_output = driver.addons().execute(
        GenerateDateTimeCurrentFutureOrPast.futurepastaction(
            days=11,
            months=0,
            years=0,
            hours=0,
            minutes=0,
            format="dd"))
    RandomValidTilldate = step_output

    # 54. Click 'SelectionCalenderDate'
    # SelectValidDate
    selectioncalenderdate = driver.find_element(By.XPATH,
                                                f'//div[. = {RandomValidTilldate}]')
    selectioncalenderdate.click()

    # 55. Click 'INPUT81'
    input81 = driver.find_element(By.XPATH,
                                  "//div[1]/form/div[4]/div/div[2]/div[1]/div//input")
    input81.click()

    # 56. Is 'Not Saved1' visible?
    not_saved1 = driver.find_element(By.XPATH,
                                     "//span/span[. = 'Not Saved']")
    assert not_saved1.is_displayed()

    # 57. Click 'DIV28'
    div28 = driver.find_element(By.XPATH,
                                "//div[4]/div[2]/div[2]/div/div[3]/div[2]/div[1]/div[3]/div/div/div/div[4]")
    div28.click()

    # 58. Click 'SPAN7'
    span7 = driver.find_element(By.XPATH,
                                "//div[4]/div[1]/span")
    span7.click()

    # 59. Click 'contactspan'
    contactspan = driver.find_element(By.XPATH,
                                      "//div[4]/div/span")
    contactspan.click()

    # 60. Get text from 'MobileNoQuotation'
    mobilenoquotation = driver.find_element(By.XPATH,
                                            "//div[2]/div[1]/form/div[5]/div/div/div[2]")
    step_output = mobilenoquotation.get_attribute("value")
    ActualMobileNoQuotation = step_output

    # 61. Click 'Add Row'
    add_row = driver.find_element(By.XPATH,
                                  "//div[6]//button[. = '\n\t\t\t\t\t\t\tAdd Row']")
    add_row.click()

    # 62. Click 'DIV27'
    div27 = driver.find_element(By.XPATH,
                                "//form/div/div/div[2]/div[2]/div[1]/div/div/div[2]")
    div27.click()

    # 63. Click 'Item Code'
    item_code = driver.find_element(By.XPATH,
                                    "//input[@placeholder = 'Item Code']")
    item_code.click()

    # 64. Click 'VC-RM-FO-00011'
    vc_rm_fo_00011 = driver.find_element(By.XPATH,
                                         "//strong[. = 'VC-RM-FO-0001']")
    vc_rm_fo_00011.click()

    # 65. Click 'INPUT79'
    input79 = driver.find_element(By.XPATH,
                                  "//div[4]/div[2]/div[2]/div/div[3]/div[2]/div[1]/div[3]/div/div/div[2]/div[9]/div[2]/div[1]//input")
    input79.click()

    # 66. Type '[NONE]' in 'INPUT79'
    input79 = driver.find_element(By.XPATH,
                                  "//div[4]/div[2]/div[2]/div/div[3]/div[2]/div[1]/div[3]/div/div/div[2]/div[9]/div[2]/div[1]//input")
    input79.send_keys(" ")

    # 67. Click 'Use tax'
    use_tax = driver.find_element(By.XPATH,
                                  "//p[. = 'Use tax']")
    use_tax.click()

    # 68. Click 'INPUT82'
    input82 = driver.find_element(By.XPATH,
                                  "//div[10]/div/div/form/div[1]//input")
    input82.click()

    # 69. Type '[NONE]' in 'INPUT82'
    input82 = driver.find_element(By.XPATH,
                                  "//div[10]/div/div/form/div[1]//input")
    input82.send_keys(" ")

    # 70. Click 'US ST 6% - VC'
    us_st_6_vc = driver.find_element(By.XPATH,
                                     "//strong[. = 'US ST 6% - VC']")
    us_st_6_vc.click()

    # 71. Click 'INPUT80'
    input80 = driver.find_element(By.XPATH,
                                  "//div[10]/div/div/form/div[2]//input")
    input80.click()

    # 72. Click 'SPAN8'
    span8 = driver.find_element(By.XPATH,
                                "//div[13]/div/span")
    span8.click()

    # 73. Click 'INPUT83'
    input83 = driver.find_element(By.XPATH,
                                  "//div[13]/div[2]/div[1]/form/div[1]//input")
    input83.click()

    # 74. Click 'EPI_Coupon@01'
    epi_coupon_01 = driver.find_element(By.XPATH,
                                        "//strong[. = 'EPI_Coupon@01']")
    epi_coupon_01.click()

    # 75. Get text from 'LeadIDQuotation'
    leadidquotation = driver.find_element(By.XPATH,
                                          "//div[1]/form/div[4]/div/div[2]/div[1]/div//input")
    step_output = leadidquotation.get_attribute("value")
    ActualLeadIdQuotation = step_output

    # 76. Get text from 'CustomerNameQuotation'
    customernamequotation = driver.find_element(By.XPATH,
                                                "//div[3]/div/div[1]/form/div[5]/div/div/div[2]")
    step_output = customernamequotation.get_attribute("value")
    ActualLeadOrgNm = step_output

    # 77. Click 'Save19'
    save19 = driver.find_element(By.XPATH,
                                 "//div[4]//button[. = 'Save']")
    save19.click()

    # 78. Get text from 'Automation EPI'
    automation_epi = driver.find_element(By.XPATH,
                                         "//div[4]//div[. = 'Automation EPI']")
    step_output = automation_epi.get_attribute("value")
    ActualQuotationNm = step_output

    # 79. Compares '{ExpectedLeadOrgNm}' with '{ActualLeadOrgNm}'
    step_output = driver.addons().execute(
        StringUtils.comparetwostrings(
            firstString=f'{ExpectedLeadOrgNm}',
            secondString=f'{ActualLeadOrgNm}',
            ignoreCase=False,
            expectedResult=0))

    # 80. Compares '{ExpectedLeadOrgNm}' with '{ActualQuotationNm}'
    step_output = driver.addons().execute(
        StringUtils.comparetwostrings(
            firstString=f'{ExpectedLeadOrgNm}',
            secondString=f'{ActualQuotationNm}',
            ignoreCase=False,
            expectedResult=0))

    # 81. Compares '{ExpectedLeadID}' with '{ActualLeadIdQuotation}'
    step_output = driver.addons().execute(
        StringUtils.comparetwostrings(
            firstString=f'{ExpectedLeadID}',
            secondString=f'{ActualLeadIdQuotation}',
            ignoreCase=False,
            expectedResult=0))

    # 82. Compares '{ExpectedLeadMobile}' with '{ActualMobileNoQuotation}'
    step_output = driver.addons().execute(
        StringUtils.comparetwostrings(
            firstString=f'{ExpectedLeadMobile}',
            secondString=f'{ActualMobileNoQuotation}',
            ignoreCase=False,
            expectedResult=0))

    # 83. Click 'Submit9'
    submit9 = driver.find_element(By.XPATH,
                                  "//button[. = 'Submit']")
    submit9.click()

    # 84. Click 'Yes'
    yes = driver.find_element(By.XPATH,
                              "//button[. = 'Yes']")
    yes.click()

    # 85. Is 'Quotation has been submitted successf...' present?
    quotation_has_been_submitted_successf_ = driver.find_element(By.XPATH,
                                                                 "//div[. = 'Quotation has been submitted successfully']")

    # 86. Is 'Open' visible?
    open = driver.find_element(By.XPATH,
                               "//span/span[. = 'Open']")
    assert open.is_displayed()

    # 87. Logout from the application
    test_logout.test_main(driver)
