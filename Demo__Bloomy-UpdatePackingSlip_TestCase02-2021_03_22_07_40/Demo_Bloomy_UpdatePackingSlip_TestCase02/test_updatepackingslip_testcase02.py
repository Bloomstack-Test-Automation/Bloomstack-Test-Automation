from selenium.webdriver.common.by import By
from selenium.webdriver.support.select import Select
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Demo_ Bloomy
    Package: TestProject.Generated.Tests.DemoBloomy
    Test: UpdatePackingSlip_TestCase02
    Generated by: Rahul Prakash (rahulprakash0862@gmail.com)
    Generated on 03/22/2021, 07:40:39
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="5o-UXmLZug6gaKmDcoeI6tT7NM19XyG1qnolFybLul4",
                              project_name="Demo_ Bloomy",
                              job_name="UpdatePackingSlip_TestCase02")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "https://epitest-demo.bloomstack.io/"

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Click 'Login'
    login = driver.find_element(By.XPATH,
                                "//a[. = 'Login']")
    login.click()

    # 3. Click 'Email Address'
    email_address = driver.find_element(By.CSS_SELECTOR,
                                        "#login_email")
    email_address.click()

    # 4. Type 'rahul.prakash@extrapreneursindia.com' in 'Email Address'
    email_address = driver.find_element(By.CSS_SELECTOR,
                                        "#login_email")
    email_address.send_keys("rahul.prakash@extrapreneursindia.com")

    # 5. Click 'Password'
    password = driver.find_element(By.CSS_SELECTOR,
                                   "#login_password")
    password.click()

    # 6. Type 'epi@123' in 'Password'
    password = driver.find_element(By.CSS_SELECTOR,
                                   "#login_password")
    password.send_keys("epi@123")

    # 7. Click 'Login1'
    login1 = driver.find_element(By.XPATH,
                                 "//button[. = '\n\t\t\t\tLogin']")
    login1.click()

    # 8. Click 'Stock4'
    stock4 = driver.find_element(By.XPATH,
                                 "//div[. = '\n                Stock\n              ']")
    stock4.click()

    # 9. Does 'Stock1' contain 'Stock'?
    stock1 = driver.find_element(By.XPATH,
                                 "//div[. = 'Stock']")
    step_output = stock1.text
    assert step_output and ("Stock" in step_output)

    # 10. Click 'Delivery Note'
    delivery_note = driver.find_element(By.XPATH,
                                        "//div/a[. = 'Delivery Note']")
    delivery_note.click()

    # 11. Does 'Delivery Note1' contain 'Delivery Note'?
    delivery_note1 = driver.find_element(By.XPATH,
                                         "//div[. = 'Delivery Note']")
    step_output = delivery_note1.text
    assert step_output and ("Delivery Note" in step_output)

    # 12. Click 'New1'
    new1 = driver.find_element(By.XPATH,
                               "//span[. = 'New']")
    new1.click()

    # 13. Click 'INPUT'
    input = driver.find_element(By.XPATH,
                                "//div[2]/form/div[2]/div/div[2]/div[1]/div//input")
    input.click()

    # 14. Type 'vap' in 'INPUT'
    input = driver.find_element(By.XPATH,
                                "//div[2]/form/div[2]/div/div[2]/div[1]/div//input")
    input.send_keys("vap")

    # 15. Click 'VapeCo'
    vapeco = driver.find_element(By.XPATH,
                                 "//strong[. = 'VapeCo']")
    vapeco.click()

    # 16. Click 'INPUT1'
    input1 = driver.find_element(By.XPATH,
                                 "//div[3]/div[2]/div[1]/form//input")
    input1.click()

    # 17. Click 'P'
    p = driver.find_element(By.XPATH,
                            "//div[3]/div/div[2]/div[1]/div/div/ul/li[1]//p")
    p.click()

    # 18. Scroll window by ('0','200')
    driver.execute_script("window.scrollBy(0,200)")

    # 19. Scroll window by ('0','200')
    driver.execute_script("window.scrollBy(0,200)")

    # 20. Scroll window by ('0','300')
    driver.execute_script("window.scrollBy(0,300)")

    # 21. Click 'DIV'
    div = driver.find_element(By.XPATH,
                              "//div[2]/div/div[2]/div[2]/div[1]/div/div/div[2]")
    div.click()

    # 22. Click 'CBDOOS™ CBD Lozenges, Consumable,'
    cbdoos_cbd_lozenges_consumable_ = driver.find_element(By.XPATH,
                                                          "//span[. = 'CBDOOS™ CBD Lozenges, Consumable, ']")
    cbdoos_cbd_lozenges_consumable_.click()

    # 23. Does 'Select Serial Numbers1' contain 'Select Serial Numbers'?
    select_serial_numbers1 = driver.find_element(By.XPATH,
                                                 "//h4[. = 'Select Serial Numbers']")
    step_output = select_serial_numbers1.text
    assert step_output and ("Select Serial Numbers" in step_output)

    # 24. Click 'Insert'
    insert = driver.find_element(By.XPATH,
                                 "//button[. = 'Insert']")
    insert.click()

    # 25. Click 'Save'
    save = driver.find_element(By.XPATH,
                               "//button[. = 'Save']")
    save.click()

    # 26. Scroll window by ('0','-700')
    driver.execute_script("window.scrollBy(0,-700)")

    # 27. Click 'Close1'
    close1 = driver.find_element(By.XPATH,
                                 "//div[2]/div/div//button[. = '\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t\t']")
    close1.click()

    # 28. Does 'Saved' contain 'Saved'?
    saved = driver.find_element(By.XPATH,
                                "//div[. = 'Saved']")
    step_output = saved.text
    assert step_output and ("Saved" in step_output)

    # 29. Click 'I'
    i = driver.find_element(By.XPATH,
                            "//div[5]/div/div/div[1]/div[1]/div[2]/button/i")
    i.click()

    # 30. Scroll window by ('0','100')
    driver.execute_script("window.scrollBy(0,100)")

    # 31. Click 'INPUT27'
    input27 = driver.find_element(By.XPATH,
                                  "//div[5]/div/div[1]/form/div[1]//input")
    input27.click()

    # 32. Click 'DT warehouse - VC3'
    dt_warehouse_vc3 = driver.find_element(By.XPATH,
                                           "//strong[. = 'DT warehouse - VC']")
    dt_warehouse_vc3.click()

    # 33. Click 'Save9'
    save9 = driver.find_element(By.XPATH,
                                "//span[. = 'Save']")
    save9.click()

    # 34. Scroll window by ('0','-100')
    driver.execute_script("window.scrollBy(0,-100)")

    # 35. Does 'Saved1' contain 'Saved'?
    saved1 = driver.find_element(By.XPATH,
                                 "//div[2]/div[. = 'Saved']")
    step_output = saved1.text
    assert step_output and ("Saved" in step_output)

    # 36. Does 'DIV9' contain '[NONE]'?
    div9 = driver.find_element(By.XPATH,
                               "//div[5]/div[1]/div/div/div[1]/h1/div[2]")
    step_output = div9.text
    assert step_output and ("" in step_output)

    # 37. Click 'Packing Slip1'
    packing_slip1 = driver.find_element(By.XPATH,
                                        "//header//a[. = 'Packing Slip']")
    packing_slip1.click()

    # 38. Click 'INPUT30'
    input30 = driver.find_element(By.XPATH,
                                  "//div[6]/div[2]/div[2]/div/div[3]/div[2]/div[1]/div[3]/div[2]/div[2]/div[1]//input")
    input30.click()

    # 39. Click 'SPAN4'
    span4 = driver.find_element(By.XPATH,
                                "//div[6]/div[1]/div/div/div[2]/div[2]/button/span/span[2]")
    span4.click()

    # 40. Click 'Edit2'
    edit2 = driver.find_element(By.XPATH,
                                "//li[1]/a[. = '\n\t\t\t\tEdit']")
    edit2.click()

    # 41. Click 'SELECT'
    select = driver.find_element(By.XPATH,
                                 "//div[2]/div[1]/div/div[2]/div/div/div/form//select")
    select.click()

    # 42. Select the 'Source Warehouse' option in 'SELECT'
    select = driver.find_element(By.XPATH,
                                 "//div[2]/div[1]/div/div[2]/div/div/div/form//select")
    Select(select).select_by_value("Source Warehouse")

    # 43. Click 'SELECT'
    select = driver.find_element(By.XPATH,
                                 "//div[2]/div[1]/div/div[2]/div/div/div/form//select")
    select.click()

    # 44. Click 'INPUT29'
    input29 = driver.find_element(By.XPATH,
                                  "//div[2]/div/div[2]/div[1]/div/div[2]/div//input")
    input29.click()

    # 45. Click 'Work In Progress - VC2'
    work_in_progress_vc2 = driver.find_element(By.XPATH,
                                               "//li[4]//strong[. = 'Work In Progress - VC']")
    work_in_progress_vc2.click()

    # 46. Does 'DIV11' contain '[NONE]'?
    div11 = driver.find_element(By.XPATH,
                                "//div[8]/div[2]/div/div[1]/div/div[1]")
    step_output = div11.text
    assert step_output and ("" in step_output)

    # 47. Click 'Update'
    update = driver.find_element(By.XPATH,
                                 "//button[. = 'Update']")
    update.click()

    # 48. Does 'Updated successfully2' contain 'Updated successfully'?
    updated_successfully2 = driver.find_element(By.XPATH,
                                                "//div[. = 'Updated successfully']")
    step_output = updated_successfully2.text
    assert step_output and ("Updated successfully" in step_output)

    # 49. Click 'Settings'
    settings = driver.find_element(By.XPATH,
                                   "//span[. = '      Settings']")
    settings.click()

    # 50. Click 'Logout'
    logout = driver.find_element(By.XPATH,
                                 "//a[. = '       Logout']")
    logout.click()
