from addons.string_utils import StringUtils
from distutils.util import strtobool
from selenium.webdriver.common.by import By
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
from subtests import test_login
from subtests import test_logout
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Bloomy_Core
    Package: TestProject.Generated.Tests.BloomyCore
    Test: QuotationToContract_TestCase
    Generated by: Meenal Kardale (meenal.kardale@extrapreneurs-india.com)
    Generated on 06/30/2021, 10:51:14
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="3J0RNM_48lLt_KM5Ab6s6A_HZzddmktVs_HhX77AjTM",
                              project_name="Bloomy_Core",
                              job_name="QuotationToContract_TestCase")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    """1. Go to the Quotation doctype( Desk>> Selling >> quotation) or Type quotation list in search bar.

    2. Open Quotation and submit3.Click on Create -> Contract4. Contract screen will get displayed5. Enter contract term  6. Enter start date and end date7. Add authorize signature8. Click on save and submit9. Click on Authorise 10. Enter email id and submit.
    """
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "https://epitest-demo.bloomstack.io/"
    ExpectedCustName = ""
    ActualCustName = ""
    ActualCustNameOnAuthorise = ""
    username = ""
    pwd = ""

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Login to the Application
    test_login.test_main(driver)

    # 3. Click 'Search or type a command (Ctrl + G)'
    search_or_type_a_command_ctrl_g_ = driver.find_element(By.CSS_SELECTOR,
                                                           "#navbar-search")
    search_or_type_a_command_ctrl_g_.click()

    # 4. Type 'quotat' in 'Search or type a command (Ctrl + G)'
    search_or_type_a_command_ctrl_g_ = driver.find_element(By.CSS_SELECTOR,
                                                           "#navbar-search")
    search_or_type_a_command_ctrl_g_.send_keys("quotat")

    # 5. Click 'Quotation List'
    quotation_list = driver.find_element(By.XPATH,
                                         "//li[. = 'Quotation List']")
    quotation_list.click()

    # 6. Does 'Quotation6' contain 'Quotation'?
    quotation6 = driver.find_element(By.XPATH,
                                     "//div[. = 'Quotation']")
    step_output = quotation6.text
    assert step_output and ("Quotation" in step_output)

    # 7. Click 'New4'
    new4 = driver.find_element(By.XPATH,
                               "//button[. = 'New']")
    new4.click()

    # 8. Does 'New Quotation 1' contain 'New Quotation 1'?
    new_quotation_1 = driver.find_element(By.XPATH,
                                          "//div[. = 'New Quotation 1']")
    step_output = new_quotation_1.text
    assert step_output and ("New Quotation 1" in step_output)

    # 9. Does 'status1' contain 'Not Saved'?
    status1 = driver.find_element(By.XPATH,
                                  "//span/span[. = 'Not Saved']")
    step_output = status1.text
    assert step_output and ("Not Saved" in step_output)

    # 10. Click 'INPUT62'
    input62 = driver.find_element(By.XPATH,
                                  "//div[1]/form/div[4]//input")
    input62.click()

    # 11. Type '2018' in 'INPUT62'
    input62 = driver.find_element(By.XPATH,
                                  "//div[1]/form/div[4]//input")
    input62.send_keys("2018")

    # 12. Click 'LI8'
    li8 = driver.find_element(By.XPATH,
                              "//div[4]/div/div[2]/div[1]/div/div/ul/li[1]")
    li8.click()

    # 13. Click 'INPUT63'
    input63 = driver.find_element(By.XPATH,
                                  "//div[2]/form/div[2]/div/div[2]/div[1]/div//input")
    input63.click()

    # 14. Type 'vap' in 'INPUT63'
    input63 = driver.find_element(By.XPATH,
                                  "//div[2]/form/div[2]/div/div[2]/div[1]/div//input")
    input63.send_keys("vap")

    # 15. Click 'VapeCo13'
    vapeco13 = driver.find_element(By.XPATH,
                                   "//li[. = 'VapeCo']")
    vapeco13.click()

    # 16. Click 'Add Row9'
    add_row9 = driver.find_element(By.XPATH,
                                   "//div[6]//button[. = '\n\t\t\t\t\t\t\tAdd Row']")
    add_row9.click()

    # 17. Click 'DIV33'
    div33 = driver.find_element(By.XPATH,
                                "//form/div/div/div[2]/div[2]/div[1]/div/div/div[2]")
    div33.click()

    # 18. Type '[NONE]' in 'item code123'
    item_code123 = driver.find_element(By.XPATH,
                                       "//input[@placeholder = 'Item Code']")
    item_code123.send_keys(" ")

    # 19. Click 'LI19'
    li19 = driver.find_element(By.XPATH,
                               "//div[2]/div[1]/div/div/div[2]/div[1]/div//li[1]")
    li19.click()

    # 20. Get text from 'INPUT62'
    input62 = driver.find_element(By.XPATH,
                                  "//div[1]/form/div[4]//input")
    step_output = input62.get_attribute("value")
    ExpectedCustName = step_output

    # 21. Click 'saveclick'
    saveclick = driver.find_element(By.XPATH,
                                    "//button[. = 'Save']")
    saveclick.click()

    # 22. Click 'Close'
    close = driver.find_element(By.XPATH,
                                "//button[. = '\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t\t']")
    close.click()

    # 23. Get text from '2018HMO LLC4'
    _2018hmo_llc4 = driver.find_element(By.XPATH,
                                        "//h1//div[. = '2018HMO LLC']")
    step_output = _2018hmo_llc4.get_attribute("value")
    ActualCustName = step_output

    # 24. Compares '{ExpectedCustName}' with '{ActualCustName}'
    step_output = driver.addons().execute(
        StringUtils.comparetwostrings(
            firstString=f'{ExpectedCustName}',
            secondString=f'{ActualCustName}',
            ignoreCase=False,
            expectedResult=0))

    # 25. Does 'Draft' contain 'Draft'?
    draft = driver.find_element(By.XPATH,
                                "//span/span[. = 'Draft']")
    step_output = draft.text
    assert step_output and ("Draft" in step_output)

    # 26. Click 'Submit8'
    submit8 = driver.find_element(By.XPATH,
                                  "//button[. = 'Submit']")
    submit8.click()

    # 27. Click 'Yes11'
    yes11 = driver.find_element(By.XPATH,
                                "//button[. = 'Yes']")
    yes11.click()

    # 28. Click 'Close11'
    close11 = driver.find_element(By.XPATH,
                                  "//span[. = 'Close']")
    close11.click()

    # 29. Does 'Quotation has been submitted successf...4' contain 'Quotation has been submitted successfully'?
    quotation_has_been_submitted_successf_4 = driver.find_element(By.XPATH,
                                                                  "//div[. = 'Quotation has been submitted successfully']")
    step_output = quotation_has_been_submitted_successf_4.text
    assert step_output and (
        "Quotation has been submitted successfully" in step_output)

    # 30. Does 'Open1' contain 'Open'?
    open1 = driver.find_element(By.XPATH,
                                "//span/span[. = 'Open']")
    step_output = open1.text
    assert step_output and ("Open" in step_output)

    # 31. Click 'crt'
    crt = driver.find_element(By.XPATH,
                              "//button[. = '\t\t\t\tCreate ']")
    crt.click()

    # 32. Click 'Contract'
    contract = driver.find_element(By.XPATH,
                                   "//a[. = 'Contract']")
    contract.click()

    # 33. Does 'New Contract 1' contain 'New Contract 1'?
    new_contract_1 = driver.find_element(By.XPATH,
                                         "//div[. = 'New Contract 1']")
    step_output = new_contract_1.text
    assert step_output and ("New Contract 1" in step_output)

    # 34. Does 'draftstat' contain 'Draft'?
    draftstat = driver.find_element(By.XPATH,
                                    "//span/span[. = 'Draft']")
    step_output = draftstat.text
    assert step_output and ("Draft" in step_output)

    # 35. Click 'INPUT148'
    input148 = driver.find_element(By.XPATH,
                                   "//div[2]/div/div[1]/form/div[2]//input")
    input148.click()

    # 36. Type 'vap' in 'INPUT148'
    input148 = driver.find_element(By.XPATH,
                                   "//div[2]/div/div[1]/form/div[2]//input")
    input148.send_keys("vap")

    # 37. Click 'VapeCo19'
    vapeco19 = driver.find_element(By.XPATH,
                                   "//div[1]/form//li[. = 'VapeCo']")
    vapeco19.click()

    # 38. Click 'INPUT149'
    input149 = driver.find_element(By.XPATH,
                                   "//div[4]/div[2]/div[1]/form/div[1]/div/div[2]/div/input")
    input149.click()

    # 39. Click '3021'
    _3021 = driver.find_element(By.XPATH,
                                "//div[5]//div[32][. = '30']")
    _3021.click()

    # 40. Click 'INPUT150'
    input150 = driver.find_element(By.XPATH,
                                   "//div[4]/div[2]/div[2]/form/div[1]/div/div[2]/div/input")
    input150.click()

    # 41. Click 'path2'
    path2 = driver.find_element(By.XPATH,
                                "//div[6]/nav/div[3]//*[name()='path']")
    path2.click()

    # 42. Click 'path2'
    path2 = driver.find_element(By.XPATH,
                                "//div[6]/nav/div[3]//*[name()='path']")
    path2.click()

    # 43. Click 'path2'
    path2 = driver.find_element(By.XPATH,
                                "//div[6]/nav/div[3]//*[name()='path']")
    path2.click()

    # 44. Click 'path2'
    path2 = driver.find_element(By.XPATH,
                                "//div[6]/nav/div[3]//*[name()='path']")
    path2.click()

    # 45. Click '311'
    _311 = driver.find_element(By.XPATH,
                               "//div[36][. = '31']")
    _311.click()

    # 46. Click 'DIV74'
    div74 = driver.find_element(By.XPATH,
                                "//div[7]/div[2]/div/form/div[2]/div/div[2]/div[1]/div/div[1]")
    div74.click()

    # 47. Type 'Testing Purpose' in 'Testing purpose'
    testing_purpose = driver.find_element(By.XPATH,
                                          "//p[. = 'Testing purpose']")
    testing_purpose.send_keys("Testing Purpose")

    # 48. Click 'CANVAS'
    canvas = driver.find_element(By.XPATH,
                                 "//div[10]//canvas")
    canvas.click()

    # 49. Click 'saveclick'
    saveclick = driver.find_element(By.XPATH,
                                    "//button[. = 'Save']")
    saveclick.click()

    # 50. Does 'draftstat' contain 'Draft'?
    draftstat = driver.find_element(By.XPATH,
                                    "//span/span[. = 'Draft']")
    step_output = draftstat.text
    assert step_output and ("Draft" in step_output)

    # 51. Click 'Submit16'
    submit16 = driver.find_element(By.XPATH,
                                   "//div[4]//span[. = 'Submit']")
    submit16.click()

    # 52. Click 'Yes4'
    yes4 = driver.find_element(By.XPATH,
                               "//div[2]/div/div//button[. = 'Yes']")
    yes4.click()

    # 53. Does 'Saved2' contain 'Saved'?
    saved2 = driver.find_element(By.XPATH,
                                 "//div[5]/div[. = 'Saved']")
    step_output = saved2.text
    assert step_output and ("Saved" in step_output)

    # 54. Does 'Unsigned' contain 'Unsigned'?
    unsigned = driver.find_element(By.XPATH,
                                   "//span/span[. = 'Unsigned']")
    step_output = unsigned.text
    assert step_output and ("Unsigned" in step_output)

    # 55. Click 'Authorize1'
    authorize1 = driver.find_element(By.XPATH,
                                     "//button[. = 'Authorize']")
    authorize1.click()

    # 56. Type 'testautomationuser@bloomstack.com' in 'INPUT151'
    input151 = driver.find_element(By.XPATH,
                                   "//div[2]/div[1]/div/div[2]/div/div/div/form/div[1]//input")
    input151.send_keys("testautomationuser@bloomstack.com")

    # 57. Click 'INPUT151'
    input151 = driver.find_element(By.XPATH,
                                   "//div[2]/div[1]/div/div[2]/div/div/div/form/div[1]//input")
    input151.click()

    # 58. Get text from 'INPUT152'
    input152 = driver.find_element(By.XPATH,
                                   "//div[2]/div[1]/div/div[2]/div/div/div/form/div[2]//input")
    step_output = input152.get_attribute("value")
    ActualCustNameOnAuthorise = step_output

    # 59. Compares '{ExpectedCustName}' with '{ActualCustNameOnAuthorise}'
    step_output = driver.addons().execute(
        StringUtils.comparetwostrings(
            firstString=f'{ExpectedCustName}',
            secondString=f'{ActualCustNameOnAuthorise}',
            ignoreCase=False,
            expectedResult=0))

    # 60. Click 'Submit10'
    submit10 = driver.find_element(By.XPATH,
                                   "//button[3][. = 'Submit']")
    submit10.click()

    '''
    # (STEP DISABLED)
    # 61. Does '2018HMO LLC - 9 has been successfully...' contain '2018HMO LLC - 9 has been successfully sent to testautomationuser@bloomstack.com'?
    _2018hmo_llc_9_has_been_successfully_ = driver.find_element(By.XPATH,
    "//div/div/div[2]/div/div[. = '2018HMO LLC - 9 has been successfully sent to testautomationuser@bloomstack.com']")
    step_output = _2018hmo_llc_9_has_been_successfully_.text
    assert step_output and ("2018HMO LLC - 9 has been successfully sent to testautomationuser@bloomstack.com" in step_output)
    '''

    # 62. Click 'Close4'
    close4 = driver.find_element(By.XPATH,
                                 "//div[2]/div/div//button[. = '\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t\t']")
    close4.click()

    # 63. Logout from the application
    test_logout.test_main(driver)
