from selenium.webdriver.common.by import By
from selenium.webdriver.support.select import Select
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
from subtests import test_logintest
from subtests import test_logouttest
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Demo_ Bloomy
    Package: TestProject.Generated.Tests.DemoBloomy
    Test: UpdateProductionPlan_TestCase01
    Generated by: Rahul Prakash (rahulprakash0862@gmail.com)
    Generated on 03/12/2021, 07:42:59
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="5o-UXmLZug6gaKmDcoeI6tT7NM19XyG1qnolFybLul4",
                              project_name="Demo_ Bloomy",
                              job_name="UpdateProductionPlan_TestCase01")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "https://epitest-demo.bloomstack.io"

    # 1. Run LoginTest
    test_logintest.test_main(driver)

    # 2. Click 'Manufacturing'
    manufacturing = driver.find_element(By.XPATH,
                                        "//div[. = '\n                Manufacturing\n              ']")
    manufacturing.click()

    # 3. Does 'Manufacturing1' contain 'Manufacturing'?
    manufacturing1 = driver.find_element(By.XPATH,
                                         "//div[. = 'Manufacturing']")
    step_output = manufacturing1.text
    assert step_output and ("Manufacturing" in step_output)

    # 4. Click 'Bill of Materials'
    bill_of_materials = driver.find_element(By.XPATH,
                                            "//div/a[. = 'Bill of Materials']")
    bill_of_materials.click()

    # 5. Does 'BOM' contain 'BOM'?
    bom = driver.find_element(By.XPATH,
                              "//div[. = 'BOM']")
    step_output = bom.text
    assert step_output and ("BOM" in step_output)

    # 6. Click 'New'
    new = driver.find_element(By.XPATH,
                              "//span[. = 'New']")
    new.click()

    # 7. Click 'INPUT2'
    input2 = driver.find_element(By.XPATH,
                                 "//div[2]/div/div[1]/form/div[2]//input")
    input2.click()

    # 8. Type 'EPI Update' in 'INPUT2'
    input2 = driver.find_element(By.XPATH,
                                 "//div[2]/div/div[1]/form/div[2]//input")
    input2.send_keys("EPI Update")

    # 9. Click 'INPUT'
    input = driver.find_element(By.XPATH,
                                "//div[2]/div/div[1]/form/div[3]//input")
    input.click()

    # 10. Click 'Manufacturing2'
    manufacturing2 = driver.find_element(By.XPATH,
                                         "//a[. = 'Manufacturing']")
    manufacturing2.click()

    # 11. Click 'Production Plan4'
    production_plan4 = driver.find_element(By.XPATH,
                                           "//div/a[. = 'Production Plan']")
    production_plan4.click()

    # 12. Click ''
    _ = driver.find_element(By.XPATH,
                            "//button[. = '\n\t\t\t\t\n\t\t\t']")
    _.click()

    # 13. Click 'New2'
    new2 = driver.find_element(By.XPATH,
                               "//div[5]//span[. = 'New']")
    new2.click()

    # 14. Click 'INPUT8'
    input8 = driver.find_element(By.XPATH,
                                 "//div[6]/div[2]/div[2]/div/div[3]/div[2]/div[1]/div[3]/div/div/div[2]/div[2]/div/div[1]//input")
    input8.click()

    # 15. Type 'extra' in 'INPUT8'
    input8 = driver.find_element(By.XPATH,
                                 "//div[6]/div[2]/div[2]/div/div[3]/div[2]/div[1]/div[3]/div/div/div[2]/div[2]/div/div[1]//input")
    input8.send_keys("extra")

    # 16. Click 'INPUT8'
    input8 = driver.find_element(By.XPATH,
                                 "//div[6]/div[2]/div[2]/div/div[3]/div[2]/div[1]/div[3]/div/div/div[2]/div[2]/div/div[1]//input")
    input8.click()

    # 17. Click 'Extrapreneurs India Pvt Ltd5'
    extrapreneurs_india_pvt_ltd5 = driver.find_element(By.XPATH,
                                                       "//strong[. = 'Extrapreneurs India Pvt Ltd']")
    extrapreneurs_india_pvt_ltd5.click()

    # 18. Scroll window by ('0','200')
    driver.execute_script("window.scrollBy(0,200)")

    # 19. Click 'DIV3'
    div3 = driver.find_element(By.XPATH,
                               "//div[2]/div/div[2]/div[2]/div//div[3]")
    div3.click()

    # 20. Type 'epi' in 'Item Code2'
    item_code2 = driver.find_element(By.XPATH,
                                     "//input[@placeholder = 'Item Code']")
    item_code2.send_keys("epi")

    # 21. Click 'P7'
    p7 = driver.find_element(By.XPATH,
                             "//div[1]/div/div/div/ul/li[1]/a/p[1]")
    p7.click()

    # 22. Click 'BOM No'
    bom_no = driver.find_element(By.XPATH,
                                 "//input[@placeholder = 'BOM No']")
    bom_no.click()

    # 23. Click 'Planned Qty'
    planned_qty = driver.find_element(By.XPATH,
                                      "//input[@placeholder = 'Planned Qty']")
    planned_qty.click()

    # 24. Type '1.00' in 'Planned Qty'
    planned_qty = driver.find_element(By.XPATH,
                                      "//input[@placeholder = 'Planned Qty']")
    planned_qty.send_keys("1.00")

    # 25. Click 'For Warehouse'
    for_warehouse = driver.find_element(By.XPATH,
                                        "//input[@placeholder = 'For Warehouse']")
    for_warehouse.click()

    # 26. Click 'EPI-Warehouse2 - EIPL'
    epi_warehouse2_eipl = driver.find_element(By.XPATH,
                                              "//strong[. = 'EPI-Warehouse2 - EIPL']")
    epi_warehouse2_eipl.click()

    # 27. Click 'Save2'
    save2 = driver.find_element(By.XPATH,
                                "//div[6]//span[. = 'Save']")
    save2.click()

    # 28. Scroll window by ('0','-200')
    driver.execute_script("window.scrollBy(0,-200)")

    # 29. Does 'Saved10' contain 'Saved'?
    saved10 = driver.find_element(By.XPATH,
                                  "//div[. = 'Saved']")
    step_output = saved10.text
    assert step_output and ("Saved" in step_output)

    # 30. Click 'Production Plan2'
    production_plan2 = driver.find_element(By.XPATH,
                                           "//li[2]/a[. = 'Production Plan']")
    production_plan2.click()

    # 31. Click 'INPUT9'
    input9 = driver.find_element(By.XPATH,
                                 "//div[5]/div[2]/div[2]/div/div[3]/div[2]/div[1]/div[3]/div[2]/div[2]/div[1]//input")
    input9.click()

    # 32. Click 'SPAN2'
    span2 = driver.find_element(By.XPATH,
                                "//div[5]/div[1]/div/div/div[2]/div[2]/button/span[1]")
    span2.click()

    # 33. Click 'Edit1'
    edit1 = driver.find_element(By.XPATH,
                                "//div[5]//a[. = '\n\t\t\t\tEdit']")
    edit1.click()

    # 34. Click 'SELECT'
    select = driver.find_element(By.XPATH,
                                 "//div[2]/div[1]/div/div[2]/div/div/div/form//select")
    select.click()

    # 35. Select the 'From Date' option in 'SELECT'
    select = driver.find_element(By.XPATH,
                                 "//div[2]/div[1]/div/div[2]/div/div/div/form//select")
    Select(select).select_by_value("From Date")

    # 36. Click 'SELECT'
    select = driver.find_element(By.XPATH,
                                 "//div[2]/div[1]/div/div[2]/div/div/div/form//select")
    select.click()

    # 37. Click 'INPUT10'
    input10 = driver.find_element(By.XPATH,
                                  "//div[2]/div[1]/div/div[2]/div/div/div/form//input")
    input10.click()

    # 38. Click '31'
    _31 = driver.find_element(By.XPATH,
                              "//div[4]/div[1]/div/div/div[. = '31']")
    _31.click()

    # 39. Click 'Update1'
    update1 = driver.find_element(By.XPATH,
                                  "//button[. = 'Update']")
    update1.click()

    # 40. Does 'Updated successfully2' contain 'Updated successfully'?
    updated_successfully2 = driver.find_element(By.XPATH,
                                                "//div[. = 'Updated successfully']")
    step_output = updated_successfully2.text
    assert step_output and ("Updated successfully" in step_output)

    # 41. Click 'MFG-PP-2021-00012'
    mfg_pp_2021_00012 = driver.find_element(By.XPATH,
                                            "//a[. = '\n\t\t\t\tMFG-PP-2021-00012\n\t\t\t\t']")
    mfg_pp_2021_00012.click()

    # 42. Click 'I1'
    i1 = driver.find_element(By.XPATH,
                             "//div[6]/div[1]/div/div/div[2]/span[2]/a[2]/i")
    i1.click()

    # 43. Scroll window by ('0','125')
    driver.execute_script("window.scrollBy(0,125)")

    # 44. Click 'Submit1'
    submit1 = driver.find_element(By.XPATH,
                                  "//button/span[. = 'Submit']")
    submit1.click()

    # 45. Click 'Yes2'
    yes2 = driver.find_element(By.XPATH,
                               "//button[. = 'Yes']")
    yes2.click()

    # 46. Does 'Saved12' contain 'Saved'?
    saved12 = driver.find_element(By.XPATH,
                                  "//div[3]/div[. = 'Saved']")
    step_output = saved12.text
    assert step_output and ("Saved" in step_output)

    # 47. Click 'Settings'
    settings = driver.find_element(By.XPATH,
                                   "//span[. = '      Settings']")
    settings.click()

    # 48. Click 'Logout'
    logout = driver.find_element(By.XPATH,
                                 "//a[. = '       Logout']")
    logout.click()

    # 49. Run LogoutTest
    test_logouttest.test_main(driver)
