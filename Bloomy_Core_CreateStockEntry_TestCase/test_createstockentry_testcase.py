import time

from selenium.webdriver.common.by import By
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Bloomy_Core
    Package: TestProject.Generated.Tests.BloomyCore
    Test: CreateStockEntry_TestCase
    Generated by: Rahul Prakash (rahulprakash0862@gmail.com)
    Generated on 05/27/2021, 12:56:56
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="5o-UXmLZug6gaKmDcoeI6tT7NM19XyG1qnolFybLul4",
                              project_name="Bloomy_Core",
                              job_name="CreateStockEntry_TestCase")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    """Generated By:Rahul."""
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "https://epitest-demo.bloomstack.io/"

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Click 'Login'
    login = driver.find_element(By.XPATH,
                                "//a[. = 'Login']")
    login.click()

    # 3. Click 'Email Address'
    email_address = driver.find_element(By.CSS_SELECTOR,
                                        "#login_email")
    email_address.click()

    # 4. Type 'testautomationuser@bloomstack.com' in 'Email Address'
    email_address = driver.find_element(By.CSS_SELECTOR,
                                        "#login_email")
    email_address.send_keys("testautomationuser@bloomstack.com")

    # 5. Click 'Password'
    password = driver.find_element(By.CSS_SELECTOR,
                                   "#login_password")
    password.click()

    # 6. Type 'epi@123' in 'Password'
    password = driver.find_element(By.CSS_SELECTOR,
                                   "#login_password")
    password.send_keys("epi@123")

    # 7. Click 'Login1'
    login1 = driver.find_element(By.XPATH,
                                 "//button[. = '\n\t\t\t\tLogin']")
    login1.click()

    # 8. Click 'Search or type a command (Ctrl + G)1'
    search_or_type_a_command_ctrl_g_1 = driver.find_element(By.CSS_SELECTOR,
                                                            "#navbar-search")
    search_or_type_a_command_ctrl_g_1.click()

    # 9. Type 'stock entry' in 'Search or type a command (Ctrl + G)'
    search_or_type_a_command_ctrl_g_ = driver.find_element(By.CSS_SELECTOR,
                                                           "#navbar-search")
    search_or_type_a_command_ctrl_g_.send_keys("stock entry")

    # 10. Click 'Stock Entry List1'
    stock_entry_list1 = driver.find_element(By.XPATH,
                                            "//p[. = 'Stock Entry List']")
    stock_entry_list1.click()

    # 11. Does 'Stock Entry4' contain 'Stock Entry'?
    stock_entry4 = driver.find_element(By.XPATH,
                                       "//div[. = 'Stock Entry']")
    step_output = stock_entry4.text
    assert step_output and ("Stock Entry" in step_output)
    time.sleep(2)

    # 12. Click 'New1'
    new1 = driver.find_element(By.XPATH,
                               "//span[. = 'New']")
    new1.click()

    # 13. Is 'DIV4' visible?
    div4 = driver.find_element(By.XPATH,
                               "//div[3]/div[1]/div/div/div[1]/h1/div[2]")
    assert div4.is_displayed()

    # 14. Click 'INPUT91'
    input91 = driver.find_element(By.XPATH,
                                  "//div[3]/div/div[1]/form/div[3]//input")
    input91.click()

    # 15. Click 'Material Receipt1'
    material_receipt1 = driver.find_element(By.XPATH,
                                            "//li[. = 'Material Receipt']")
    material_receipt1.click()

    # 16. Click 'INPUT92'
    input92 = driver.find_element(By.XPATH,
                                  "//div[6]/div/div[2]//input")
    input92.click()

    # 17. Type 'vap' in 'INPUT92'
    input92 = driver.find_element(By.XPATH,
                                  "//div[6]/div/div[2]//input")
    input92.send_keys("vap")

    # 18. Click 'VapeCo6'
    vapeco6 = driver.find_element(By.XPATH,
                                  "//li[. = 'VapeCo']")
    vapeco6.click()

    # 19. Scroll window by ('0','200')
    driver.execute_script("window.scrollBy(0,200)")

    # 20. Scroll window by ('0','100')
    driver.execute_script("window.scrollBy(0,100)")

    # 21. Click 'DIV29'
    div29 = driver.find_element(By.XPATH,
                                "//div[2]/div/div[2]/div[2]/div[1]/div/div/div[2]")
    div29.click()

    # 22. Click 'Flow Kana - Ship to HF  - VC'
    flow_kana_ship_to_hf_vc = driver.find_element(By.XPATH,
                                                  "//strong[. = 'Flow Kana - Ship to HF  - VC']")
    flow_kana_ship_to_hf_vc.click()

    # 23. Click 'Target Warehouse'
    target_warehouse = driver.find_element(By.XPATH,
                                           "//input[@placeholder = 'Target Warehouse']")
    target_warehouse.click()

    # 24. Click 'Flow Kana - Ship to HF  - VC1'
    flow_kana_ship_to_hf_vc1 = driver.find_element(By.XPATH,
                                                   "//div[3]/div[1]/div/div/div/ul//strong[. = 'Flow Kana - Ship to HF  - VC']")
    flow_kana_ship_to_hf_vc1.click()

    # 25. Click 'Item Code2'
    item_code2 = driver.find_element(By.XPATH,
                                     "//input[@placeholder = 'Item Code']")
    item_code2.click()

    # 26. Click 'VC-RM-FO-00012'
    vc_rm_fo_00012 = driver.find_element(By.XPATH,
                                         "//strong[. = 'VC-RM-FO-0001']")
    vc_rm_fo_00012.click()

    # 27. Click 'Qty'
    qty = driver.find_element(By.XPATH,
                              "//input[@placeholder = 'Qty']")
    qty.click()

    # 28. Click 'Qty'
    qty = driver.find_element(By.XPATH,
                              "//input[@placeholder = 'Qty']")
    qty.click()

    # 29. Type '10.00' in 'Qty'
    qty = driver.find_element(By.XPATH,
                              "//input[@placeholder = 'Qty']")
    qty.send_keys("10.00")

    # 30. Click 'Save8'
    save8 = driver.find_element(By.XPATH,
                                "//span[. = 'Save']")
    driver.execute_script( "arguments[0].click();", save8 )

    # 31. Scroll window by ('0','-300')
    driver.execute_script("window.scrollBy(0,-300)")

    # 32. Does 'Saved11' contain 'Saved'?
    saved11 = driver.find_element(By.XPATH,
                                  "//div[. = 'Saved']")
    step_output = saved11.text
    assert step_output and ("Saved" in step_output)

    # 33. Click 'Submit3'
    submit3 = driver.find_element(By.XPATH,
                                  "//button/span[. = 'Submit']")
    submit3.click()

    # 34. Click 'Yes1'
    yes1 = driver.find_element(By.XPATH,
                               "//button[. = 'Yes']")
    yes1.click()

    # 35. Does 'Saved13' contain 'Saved'?
    saved13 = driver.find_element(By.XPATH,
                                  "//div[2]/div[. = 'Saved']")
    step_output = saved13.text
    assert step_output and ("Saved" in step_output)

    # 36. Click 'Settings'
    settings = driver.find_element(By.XPATH,
                                   "//span[. = '      Settings']")
    settings.click()

    # 37. Click 'Logout'
    logout = driver.find_element(By.XPATH,
                                 "//a[. = '       Logout']")
    logout.click()

    # 38. Is 'Login' visible?
    login = driver.find_element(By.XPATH,
                                "//a[. = 'Login']")
    assert login.is_displayed()
