import time

from selenium.webdriver.common.by import By
from selenium.webdriver.support.select import Select
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Bloomy_Core
    Package: TestProject.Generated.Tests.BloomyCore
    Test: CreatePurchaseInvoice_TestCase
    Generated by: Rahul Prakash (rahulprakash0862@gmail.com)
    Generated on 05/26/2021, 11:31:56
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="5o-UXmLZug6gaKmDcoeI6tT7NM19XyG1qnolFybLul4",
                              project_name="Bloomy_Core",
                              job_name="CreatePurchaseInvoice_TestCase")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    """Generated By : Rahul."""
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "https://epitest-demo.bloomstack.io/"

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Is 'Login' visible?
    login = driver.find_element(By.XPATH,
                                "//a[. = 'Login']")
    assert login.is_displayed()

    # 3. Click 'Login'
    login = driver.find_element(By.XPATH,
                                "//a[. = 'Login']")
    login.click()

    # 4. Click 'Email Address'
    email_address = driver.find_element(By.CSS_SELECTOR,
                                        "#login_email")
    email_address.click()

    # 5. Type 'testautomationuser@bloomstack.com' in 'Email Address'
    email_address = driver.find_element(By.CSS_SELECTOR,
                                        "#login_email")
    email_address.send_keys("testautomationuser@bloomstack.com")

    # 6. Click 'Password'
    password = driver.find_element(By.CSS_SELECTOR,
                                   "#login_password")
    password.click()

    # 7. Type 'epi@123' in 'Password'
    password = driver.find_element(By.CSS_SELECTOR,
                                   "#login_password")
    password.send_keys("epi@123")

    # 8. Click 'Login1'
    login1 = driver.find_element(By.XPATH,
                                 "//button[. = '\n\t\t\t\tLogin']")
    login1.click()

    # 9. Click 'Search or type a command (Ctrl + G)1'
    search_or_type_a_command_ctrl_g_1 = driver.find_element(By.CSS_SELECTOR,
                                                            "#navbar-search")
    search_or_type_a_command_ctrl_g_1.click()

    # 10. Type 'purchase in' in 'Search or type a command (Ctrl + G)'
    search_or_type_a_command_ctrl_g_ = driver.find_element(By.CSS_SELECTOR,
                                                           "#navbar-search")
    search_or_type_a_command_ctrl_g_.send_keys("purchase in")

    # 11. Click 'Purchase Invoice List1'
    purchase_invoice_list1 = driver.find_element(By.XPATH,
                                                 "//span[. = 'Purchase Invoice List']")
    purchase_invoice_list1.click()

    # 12. Does 'Purchase Invoice8' contain 'Purchase Invoice'?
    purchase_invoice8 = driver.find_element(By.XPATH,
                                            "//div[. = 'Purchase Invoice']")
    step_output = purchase_invoice8.text
    assert step_output and ("Purchase Invoice" in step_output)
    time.sleep(2)

    # 13. Click 'New'
    new = driver.find_element(By.XPATH,
                              "//span[. = 'New']")
    new.click()

    # 14. Click 'SELECT20'
    select20 = driver.find_element(By.XPATH,
                                   "//div[2]/div/div[1]/form//select")
    select20.click()

    # 15. Select the 'ACC-PINV-.YYYY.-' option in 'SELECT20'
    select20 = driver.find_element(By.XPATH,
                                   "//div[2]/div/div[1]/form//select")
    Select(select20).select_by_value("ACC-PINV-.YYYY.-")

    # 16. Click 'SELECT20'
    select20 = driver.find_element(By.XPATH,
                                   "//div[2]/div/div[1]/form//select")
    select20.click()

    # 17. Click 'INPUT80'
    input80 = driver.find_element(By.XPATH,
                                  "//div[2]/div/div[1]/form/div[4]//input")
    input80.click()

    # 18. Click 'P57'
    p57 = driver.find_element(By.XPATH,
                              "//li[9]//p")
    p57.click()

    # 19. Scroll window by ('0','100')
    driver.execute_script("window.scrollBy(0,100)")

    # 20. Scroll window by ('0','200')
    driver.execute_script("window.scrollBy(0,200)")

    # 21. Scroll window by ('0','100')
    driver.execute_script("window.scrollBy(0,100)")

    # 22. Scroll window by ('0','200')
    driver.execute_script("window.scrollBy(0,200)")

    # 23. Scroll window by ('0','100')
    driver.execute_script("window.scrollBy(0,100)")

    # 24. Click 'DIV51'
    div51 = driver.find_element(By.XPATH,
                                "//div[3]/div/div[2]/div[2]/div[1]/div/div/div[2]")
    div51.click()

    # 25. Click 'VC-RM-FO-0001'
    vc_rm_fo_0001 = driver.find_element(By.XPATH,
                                        "//strong[. = 'VC-RM-FO-0001']")
    vc_rm_fo_0001.click()

    # 26. Get text from 'Item1'
    # Captured Item status Not saved
    item1 = driver.find_element(By.XPATH,
                                "//input[@placeholder = 'Item']")
    step_output = item1.get_attribute("value")

    # 27. Click 'Save20'
    save20 = driver.find_element(By.XPATH,
                                 "//span[. = 'Save']")
    save20.click()

    # 28. Scroll window by ('0','-700')
    driver.execute_script("window.scrollBy(0,-700)")

    # 29. Does 'Saved12' contain 'Saved'?
    saved12 = driver.find_element(By.XPATH,
                                  "//div[. = 'Saved']")
    step_output = saved12.text
    assert step_output and ("Saved" in step_output)

    # 30. Is 'DIV47' visible?
    div47 = driver.find_element(By.XPATH,
                                "//div[3]/div[1]/div/div/div[1]/h1/div[2]")
    assert div47.is_displayed()

    # 31. Scroll window by ('0','100')
    driver.execute_script("window.scrollBy(0,100)")

    # 32. Get text from 'INPUT80'
    # Captured supplier status draft
    input80 = driver.find_element(By.XPATH,
                                  "//div[2]/div/div[1]/form/div[4]//input")
    step_output = input80.get_attribute("value")

    # 33. Click 'Submit16'
    submit16 = driver.find_element(By.XPATH,
                                   "//button/span[. = 'Submit']")
    submit16.click()

    # 34. Click 'Yes1'
    yes1 = driver.find_element(By.XPATH,
                               "//button[. = 'Yes']")
    yes1.click()

    # 35. Scroll window by ('0','-100')
    driver.execute_script("window.scrollBy(0,-100)")

    # 36. Does 'Purchase Invoice has been submitted s...7' contain 'Purchase Invoice has been submitted successfully'?
    purchase_invoice_has_been_submitted_s_7 = driver.find_element(By.XPATH,
                                                                  "//div[. = 'Purchase Invoice has been submitted successfully']")
    step_output = purchase_invoice_has_been_submitted_s_7.text
    assert step_output and (
        "Purchase Invoice has been submitted successfully" in step_output)

    # 37. Click 'Settings'
    settings = driver.find_element(By.XPATH,
                                   "//span[. = '      Settings']")
    settings.click()

    # 38. Click 'Logout'
    logout = driver.find_element(By.XPATH,
                                 "//a[. = '       Logout']")
    logout.click()

    # 39. Is 'Login' visible?
    login = driver.find_element(By.XPATH,
                                "//a[. = 'Login']")
    assert login.is_displayed()
